AWSTemplateFormatVersion: 2010-09-09
Description: BuildBuckets Template.
  This creates Build S3 Buckets. These buckets hold artifacts used and/or created by Build Pipelines or the ImageBuilder.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - FunctionsStackName
      - Label:
          default: Environment Configuration
        Parameters:
          - AccountAlias
          - EnvironmentName
      - Label:
          default: Bucket Configuration
        Parameters:
          - UseBucketManagers
          - DeletionPolicy
    ParameterLabels:
      FunctionsStackName:
        default: Functions Stack Name
      AccountAlias:
        default: Account Alias
      EnvironmentName:
        default: Environment Name
      UseBucketManagers:
        default: Use Bucket Managers
      DeletionPolicy:
        default: Deletion Policy
Parameters:
  FunctionsStackName:
    Description: Name of the CloudFormation Stack containing Functions
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Functions
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  AccountAlias:
    Description: Unique Alias of the Account (if defined). If specified, the Alias instead of the AccountID is appended to bucket names to insure uniqueness.
    Type: String
    MaxLength: 32
    Default: ''
    AllowedPattern: (^$|^[a-z][-a-z0-9]*$)
    ConstraintDescription: must begin with a lower case letter and contain lower case letters, numbers and dashes.
  EnvironmentName:
    Description: Name of the Environment associated with the Stack
    Type: String
    Default: Production
    AllowedValues:
      - Organization
      - Jumpstart
      - Management
      - Core
      - Log
      - Build
      - Production
      - NonProduction
      - Recovery
      - Staging
      - UAT
      - QA
      - Testing
      - Development
    ConstraintDescription: must be Organization, Jumpstart, Management, Core, Log, Build, Production, NonProduction, Recovery, Staging, UAT, QA, Testing or Development.
  UseBucketManagers:
    Description: Use Bucket Managers (Allows Delete or Retain Buckets on Stack Deletion)
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either true or false.
  DeletionPolicy:
    Description: Delete or Retain Buckets on Stack Deletion
    Type: String
    Default: Delete
    AllowedValues:
      - Delete
      - Retain
    ConstraintDescription: must be Delete or Retain.
Conditions:
  AppendAccountId: !Equals [ !Ref AccountAlias, '' ]
  ConfigureBucketManagers: !Equals [ !Ref UseBucketManagers, true ]
  EmptyAndDeleteBuckets: !Equals [ !Ref DeletionPolicy, Delete ]
Resources:
  ImageBuilderLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - imagebuilder-logs-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: LogDeliveryWrite
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ImageBuilderLogsBucket
    DeletionPolicy: Retain
#  ImageBuilderLogsBucketPolicy:
#    Type: AWS::S3::BucketPolicy
#    Properties:
#      Bucket: !Ref ImageBuilderLogsBucket
#      PolicyDocument:
#        Version: 2012-10-17
#        Statement:
#          - Sid: DenyUnEncryptedConnections
#            Effect: Deny
#            Principal:
#              AWS: '*'
#            Action: s3:*
#            Resource: !Sub arn:aws:s3:::${ImageBuilderLogsBucket}/*
#            Condition:
#              Bool:
#                aws:SecureTransport: false
#          - Sid: DenyUnEncryptedObjectUploads
#            Effect: Deny
#            Principal:
#              AWS: '*'
#            Action: s3:PutObject
#            Resource: !Sub arn:aws:s3:::${ImageBuilderLogsBucket}/*
#            Condition:
#              StringNotEquals:
#                s3:x-amz-server-side-encryption: AES256
#          - Sid: DenyDeletes
#            Effect: Deny
#            Principal:
#              AWS: '*'
#            Action: s3:Delete*
#            Resource: !Sub arn:aws:s3:::${ImageBuilderLogsBucket}/*
#          - Sid: DenyDeleteBucket
#            Effect: Deny
#            Principal:
#              AWS: '*'
#            Action: s3:DeleteBucket
#            Resource: !Sub arn:aws:s3:::${ImageBuilderLogsBucket}
#    DependsOn: ImageBuilderLogsBucket
  ImageBuilderLogsBucketManager:
    Type: Custom::BucketManager
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${FunctionsStackName}-BucketManagerFunctionArn
      BucketName: !Ref ImageBuilderLogsBucket
      EmptyAndDeleteBucket: !If [ EmptyAndDeleteBuckets, True, 'AWS::NoValue' ]
    DependsOn: ImageBuilderLogsBucket
    Condition: ConfigureBucketManagers
  ComponentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - components-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ComponentsBucket
    DeletionPolicy: Retain
  ComponentsBucketManager:
    Type: Custom::BucketManager
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${FunctionsStackName}-BucketManagerFunctionArn
      BucketName: !Ref ComponentsBucket
      EmptyAndDeleteBucket: !If [ EmptyAndDeleteBuckets, True, 'AWS::NoValue' ]
    DependsOn: ComponentsBucket
    Condition: ConfigureBucketManagers
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - artifacts-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ArtifactsBucket
    DeletionPolicy: Retain
  ArtifactsBucketManager:
    Type: Custom::BucketManager
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${FunctionsStackName}-BucketManagerFunctionArn
      BucketName: !Ref ArtifactsBucket
      EmptyAndDeleteBucket: !If [ EmptyAndDeleteBuckets, True, 'AWS::NoValue' ]
    DependsOn: ArtifactsBucket
    Condition: ConfigureBucketManagers
Outputs:
  ImageBuilderLogsBucket:
    Description: The ImageBuilder Logs Bucket Name
    Value: !Ref ImageBuilderLogsBucket
    Export:
      Name: !Sub ${AWS::StackName}-ImageBuilderLogsBucket
  ComponentsBucket:
    Description: The Components Bucket Name
    Value: !Ref ComponentsBucket
    Export:
      Name: !Sub ${AWS::StackName}-ComponentsBucket
  ArtifactsBucket:
    Description: The Artifacts Bucket Name
    Value: !Ref ArtifactsBucket
    Export:
      Name: !Sub ${AWS::StackName}-ArtifactsBucket
