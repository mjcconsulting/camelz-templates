AWSTemplateFormatVersion: 2010-09-09
Description: Codes Template.
  This creates the CaMeLz Framework Codes Table, then loads it with code data. This also creates various Functions to
  support CustomResources which programatically construct Identifiers which conform to CaMeLz Framework Naming
  Conventions.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - LayersStackName
      - Label:
          default: Table Configuration
        Parameters:
          - TableName
    ParameterLabels:
      LayersStackName:
        default: Layers Stack Name
      TableName:
        default: Table Name
Parameters:
  LayersStackName:
    Description: Name of the CloudFormation Stack containing Layers
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Layers
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  TableName:
    Description: Name of the DynamoDB Codes Table
    Type: String
    MinLength: 2
    MaxLength: 32
    Default: Codes
    AllowedPattern: ^Codes$
    ConstraintDescription: must be Codes.
Resources:
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: Type
          AttributeType: S
        - AttributeName: Name
          AttributeType: S
        - AttributeName: Code
          AttributeType: S
      KeySchema:
        - AttributeName: Type
          KeyType: HASH
        - AttributeName: Name
          KeyType: RANGE
      LocalSecondaryIndexes:
        - IndexName: TypeCode
          KeySchema:
            - AttributeName: Type
              KeyType: HASH
            - AttributeName: Code
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
  CodesLoaderRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ManageDynamoDBCodesTable
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowList
                Effect: Allow
                Action:
                  - dynamodb:List*
                Resource: '*'
              - Sid: AllowItemManagement
                Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:Get*
                  - dynamodb:Delete*
                  - dynamodb:Update*
                  - dynamodb:PutItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}
  CodesLoaderFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: CodesLoader
      Description: A Lambda function which loads data into the DynamoDB Codes Table, used to construct Identifiers used by the CaMeLz Framework.
      Role: !GetAtt CodesLoaderRole.Arn
      Runtime: nodejs12.x
      Timeout: 30
      Layers:
        - !ImportValue
            Fn::Sub: ${LayersStackName}-AsyncCustomResourceLayerVersionArn
      Handler: index.handler
      Code:
        ZipFile: |
          const response = require('cfn-response-promise');

          const AWS = require('aws-sdk');
          AWS.config.apiVersions = {
            dynamodb: '2011-12-05'
          };

          const dynamodb = new AWS.DynamoDB();

          exports.handler = async (event, context) => {
            console.info(`Request body:\n${JSON.stringify(event)}`);

            const tableName = event.ResourceProperties.TableName || 'Codes';

            switch (event.RequestType) {
              case 'Create':
              case 'Update': // Note this logic can be run to create or modify records, but currently does not delete
                try {
                  const codes = event.ResourceProperties.Codes;
                  if (! codes) {
                    throw new Error(`Codes missing`);
                  }

                  console.info(`Companies:\n${JSON.stringify(codes.filter(c => c.Type == 'Company'))}`);
                  console.info(`Locations:\n${JSON.stringify(codes.filter(c => c.Type == 'Location'))}`);
                  console.info(`Environments:\n${JSON.stringify(codes.filter(c => c.Type == 'Environment'))}`);
                  console.info(`Systems:\n${JSON.stringify(codes.filter(c => c.Type == 'System'))}`);
                  console.info(`Applications:\n${JSON.stringify(codes.filter(c => c.Type == 'Application'))}`);
                  console.info(`Components:\n${JSON.stringify(codes.filter(c => c.Type == 'Component'))}`);

                  console.info('Calling putItem() for all Codes...');
                  const putPromises = [];
                  for (const code of codes) {
                    const params = {
                      TableName: tableName,
                      Item: { 'Type': { S: code.Type },
                              'Name': { S: code.Name },
                              'Code': { S: code.Code }}
                    };
                    putPromises.push(dynamodb.putItem(params).promise());
                  }

                  console.info(`- Waiting for all PutItem calls to finish...`);
                  await Promise.all(putPromises);
                  console.info(`Codes ${(event.RequestType =='Create') ? 'created' : 'updated'}`);
                  await response.send(event, context, response.SUCCESS);
                }
                catch (err) {
                  const responseData = {Error: `${(err.code) ? err.code : 'Error'}: ${err.message}`};
                  console.error(responseData.Error);
                  await response.send(event, context, response.FAILED, responseData);
                }
                break;

              case 'Delete':
                await response.send(event, context, response.SUCCESS);
            }
          };
  CodesLoader:
    Type: Custom::CodesLoader
    Properties:
      ServiceToken: !GetAtt CodesLoaderFunction.Arn
      TableName: !Ref TableName
      Codes: # Please keep Application and Component records in alphabetical order by Code
        - Type: Company
          Name: Demo
          Code: demo
        - Type: Company
          Name: CaMeLz
          Code: cml
        - Type: Company
          Name: Camelz
          Code: cml
        - Type: Company
          Name: MJCConsulting
          Code: mjc
        - Type: Company
          Name: EPAM
          Code: epm
        - Type: Location
          Name: us-east-1
          Code: ue1
        - Type: Location
          Name: us-east-2
          Code: ue2
        - Type: Location
          Name: us-west-1
          Code: uw1
        - Type: Location
          Name: us-west-2
          Code: uw2
        - Type: Location
          Name: ap-east-1
          Code: ae1
        - Type: Location
          Name: ap-south-1
          Code: ad1
        - Type: Location
          Name: ap-northeast-2
          Code: an2
        - Type: Location
          Name: ap-southeast-1
          Code: as1
        - Type: Location
          Name: ap-southeast-2
          Code: as2
        - Type: Location
          Name: ap-northeast-1
          Code: an1
        - Type: Location
          Name: ca-central-1
          Code: cc1
        - Type: Location
          Name: eu-central-1
          Code: ec1
        - Type: Location
          Name: eu-west-1
          Code: ew1
        - Type: Location
          Name: eu-west-2
          Code: ew2
        - Type: Location
          Name: eu-west-3
          Code: ew3
        - Type: Location
          Name: eu-north-1
          Code: en1
        - Type: Location
          Name: me-south-1
          Code: ms1
        - Type: Location
          Name: sa-east-1
          Code: se1
        - Type: Location
          Name: Atlanta
          Code: atl
        - Type: Location
          Name: Boston
          Code: bos
        - Type: Location
          Name: Charlotte
          Code: clt
        - Type: Location
          Name: Chicago
          Code: chi
        - Type: Location
          Name: ColoradoSprings
          Code: cos
        - Type: Location
          Name: Dallas
          Code: dfw
        - Type: Location
          Name: Denver
          Code: den
        - Type: Location
          Name: Houston
          Code: hou
        - Type: Location
          Name: KansasCity
          Code: mkc
        - Type: Location
          Name: LasVegas
          Code: las
        - Type: Location
          Name: LosAngeles
          Code: lax
        - Type: Location
          Name: Miami
          Code: mia
        - Type: Location
          Name: Minneapolis
          Code: msp
        - Type: Location
          Name: NewYork
          Code: nyc
        - Type: Location
          Name: Phoenix
          Code: phx
        - Type: Location
          Name: Portland
          Code: pdx
        - Type: Location
          Name: Raleigh
          Code: rdu
        - Type: Location
          Name: SanFrancisco
          Code: sfo
        - Type: Location
          Name: SanJose
          Code: sjc
        - Type: Location
          Name: SantaBarbara
          Code: sba
        - Type: Location
          Name: Seattle
          Code: sea
        - Type: Location
          Name: Tulsa
          Code: tul
        - Type: Location
          Name: Washington
          Code: was
        - Type: Environment
          Name: Audit
          Code: a
        - Type: Environment
          Name: Build
          Code: b
        - Type: Environment
          Name: Core
          Code: c
        - Type: Environment
          Name: Development
          Code: d
        - Type: Environment
          Name: Example
          Code: e
        - Type: Environment
          Name: Identity
          Code: i
        - Type: Environment
          Name: Log
          Code: l
        - Type: Environment
          Name: Management
          Code: m
        - Type: Environment
          Name: NonProduction
          Code: n
        - Type: Environment
          Name: Organization
          Code: o
        - Type: Environment
          Name: Production
          Code: p
        - Type: Environment
          Name: QA
          Code: q
        - Type: Environment
          Name: Recovery
          Code: r
        - Type: Environment
          Name: Staging
          Code: s
        - Type: Environment
          Name: Testing
          Code: t
        - Type: Environment
          Name: UAT
          Code: u
        - Type: Environment
          Name: Experimental
          Code: x
        - Type: System
          Name: Prototype
          Code: proto
        - Type: System
          Name: MJC
          Code: mjc
        - Type: System
          Name: POC
          Code: poc
        - Type: System
          Name: Website
          Code: web
        - Type: System
          Name: GravitonPOC
          Code: gpc
        - Type: Application
          Name: Acunetix
          Code: acu
        - Type: Application
          Name: ActiveDirectory
          Code: ad
        - Type: Application
          Name: DirectoryService
          Code: adm
        - Type: Application
          Name: Aurora
          Code: aur
        - Type: Application
          Name: LinuxBastion
          Code: bl
        - Type: Application
          Name: LinuxBastions
          Code: bl
        - Type: Application
          Name: WindowsBastion
          Code: bw
        - Type: Application
          Name: WindowsBastions
          Code: bw
        - Type: Application
          Name: CentralDatabase
          Code: cdb
        - Type: Application
          Name: DeepSecurity
          Code: ds
        - Type: Application
          Name: DataTransfer
          Code: dt
        - Type: Application
          Name: Duo
          Code: duo
        - Type: Application
          Name: EMR
          Code: emr
        - Type: Application
          Name: ETL
          Code: etl
        - Type: Application
          Name: SFTP
          Code: ftp
        - Type: Application
          Name: GitHubEnterprise
          Code: git
        - Type: Application
          Name: Glue
          Code: glue
        - Type: Application
          Name: Hadoop
          Code: had
        - Type: Application
          Name: LinuxWebServer
          Code: lws
        - Type: Application
          Name: LinuxWebServers
          Code: lwsm
        - Type: Application
          Name: LinuxWebServersNested
          Code: lwsmn
        - Type: Application
          Name: LinuxWebServerNested
          Code: lwsn
        - Type: Application
          Name: Magento
          Code: mag
        - Type: Application
          Name: MongoDB
          Code: mdb
        - Type: Application
          Name: Nessus
          Code: nes
        - Type: Application
          Name: Okta
          Code: okta
        - Type: Application
          Name: Oracle
          Code: ora
        - Type: Application
          Name: RabbitMQ
          Code: rmq
        - Type: Application
          Name: Redshift
          Code: red
        - Type: Application
          Name: RStudio
          Code: rs
        - Type: Application
          Name: ServiceDeskPlus
          Code: sdp
        - Type: Application
          Name: SiteScope
          Code: ss
        - Type: Application
          Name: Tableau
          Code: tab
        - Type: Application
          Name: Talend
          Code: tal
        - Type: Application
          Name: TikiWiki
          Code: tw
        - Type: Application
          Name: UbuntuWebServer
          Code: uws
        - Type: Application
          Name: UbuntuWebServers
          Code: uwsm
        - Type: Application
          Name: UbuntuWebServersNested
          Code: uwsmn
        - Type: Application
          Name: UbuntuWebServerNested
          Code: uwsn
        - Type: Application
          Name: OpenVPN
          Code: vpn
        - Type: Application
          Name: OpenVPNAS
          Code: vpn
        - Type: Application
          Name: WebSphereMQ
          Code: wmq
        - Type: Application
          Name: WindowsWebServer
          Code: wws
        - Type: Application
          Name: WindowsWebServers
          Code: wwsm
        - Type: Application
          Name: WindowsWebServersNested
          Code: wwsmn
        - Type: Application
          Name: WindowsWebServerNested
          Code: wwsn
        - Type: Application
          Name: WordPress
          Code: wp
        - Type: Application
          Name: Zeppelin
          Code: zep
        - Type: Component
          Name: Agent
          Code: a
        - Type: Component
          Name: AccessGateway
          Code: ag
        - Type: Component
          Name: AccessServer
          Code: as
        - Type: Component
          Name: Cache
          Code: c
        - Type: Component
          Name: Data
          Code: d
        - Type: Component
          Name: Deploy
          Code: d
        - Type: Component
          Name: Database
          Code: db
        - Type: Component
          Name: AuroraDatabase
          Code: dba
        - Type: Component
          Name: MySQLDatabase
          Code: dbm
        - Type: Component
          Name: OracleDatabase
          Code: dbo
        - Type: Component
          Name: PostgreSQLDatabase
          Code: dbp
        - Type: Component
          Name: SQLServerDatabase
          Code: dbs
        - Type: Component
          Name: DomainController
          Code: dc
        - Type: Component
          Name: DataStaging
          Code: ds
        - Type: Component
          Name: DataSecurityManager
          Code: dsm
        - Type: Component
          Name: Enterprise
          Code: e
        - Type: Component
          Name: Executor
          Code: e
        - Type: Component
          Name: ElastiCache
          Code: ec
        - Type: Component
          Name: SFTP
          Code: ft
        - Type: Component
          Name: FileSystem
          Code: fs
        - Type: Component
          Name: Glue
          Code: g
        - Type: Component
          Name: Logging
          Code: l
        - Type: Component
          Name: LoadBalancer
          Code: lb
        - Type: Component
          Name: Management
          Code: m
        - Type: Component
          Name: Manager
          Code: m
        - Type: Component
          Name: Master
          Code: m
        - Type: Component
          Name: Monitoring
          Code: m
        - Type: Component
          Name: ManagementConsole
          Code: mc
        - Type: Component
          Name: ManagementWorkstation
          Code: mw
        - Type: Component
          Name: Professional
          Code: p
        - Type: Component
          Name: Publishing
          Code: p
        - Type: Component
          Name: PolicyServer
          Code: ps
        - Type: Component
          Name: Queue
          Code: q
        - Type: Component
          Name: Server
          Code: s
        - Type: Component
          Name: SC
          Code: sc
        - Type: Component
          Name: SecurityServer
          Code: ss
        - Type: Component
          Name: TokenizationServer
          Code: ts
        - Type: Component
          Name: Update
          Code: u
        - Type: Component
          Name: Web
          Code: w
        - Type: Component
          Name: Worker
          Code: w
    DependsOn: Table
Outputs:
  Table:
    Description: The DynamoDB Table
    Value: !Ref Table
    Export:
      Name: !Sub ${AWS::StackName}-Table
  CodesLoaderFunctionArn:
    Description: The CodesLoader Lambda Function ARN
    Value: !GetAtt CodesLoaderFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-CodesLoaderFunctionArn
