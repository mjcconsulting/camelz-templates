AWSTemplateFormatVersion: '2010-09-09'
2	Description: Application-Api-GateWay Template.
3	  Creates AWS API resources from this template.
4	Metadata:
5	  AWS::CloudFormation::Interface:
6	    ParameterGroups:
7	      - Label:
8	          default: System Configuration
9	        Parameters:
10	           APIGateWayName
11	           APICodeCommitName
12	           APICodeBuildtName
13	           APICodeDeployName
14	           APICodePipelineName
15	           S3APIReadText
16	           APIS3ListBucket
17	           APIEC2Describe
18	    ParameterLabels:
19	      APIGateWayName:
20	        default: API GateWay Name
21	      APICodeCommitName:
22	        default: API Code Commit Name
23	      APICodeBuildtName:
24	        default: API CodeBuildt Name
25	      APICodeDeployName:
26	        default: API Code Deploy Name
27	      APICodePipelineName:
28	        default: API Code Pipeline Name
29	      S3APIReadText:
30	        default: S3 API Read Text
31	      APIS3ListBucket:
32	        default: API S3 List Bucket
33	      APIEC2Describe:
34	        default: API EC2 Describe
35	Parameters:
36	  APIGateWayName:
37	    Description: Name of the CloudFormation Stack Creates name of API
38	    Type: String
39	    MinLength: 2
40	    MaxLength: 64
41	    Default: HMSA-Cloudformation1-StackList
42	  APICodeCommitName:
43	    Description: Name of the CloudFormation Stack Creates name of API
44	    Type: String
45	    MinLength: 2
46	    MaxLength: 64
47	    Default: HMSA-CodeCommit-ListRepositorys
48	  APICodeBuildtName:
49	    Description: Name of the CloudFormation Stack Creates name of API
50	    Type: String
51	    MinLength: 2
52	    MaxLength: 64
53	    Default: HMSA-CodeBuildt-ListBuild
54	  APICodeDeployName:
55	    Description: Name of the CloudFormation Stack Creates name of API
56	    Type: String
57	    MinLength: 2
58	    MaxLength: 64
59	    Default: HMSA-CodeDeploy-DeployList
60	  APICodePipelineName:
61	    Description: Name of the CloudFormation Stack Creates name of API
62	    Type: String
63	    MinLength: 2
64	    MaxLength: 64
65	    Default: HMSA-CodePipeline
66	  S3APIReadText:
67	    Description: Name of the CloudFormation Stack Creates name of API
68	    Type: String
69	    MinLength: 2
70	    MaxLength: 64
71	    Default: HMSA-S3-TextFile
72	  APIS3ListBucket:
73	    Description: Name of the CloudFormation Stack Creates name of API
74	    Type: String
75	    MinLength: 2
76	    MaxLength: 64
77	    Default: HMSA-S3-BucketList
78	  APIEC2Describe:
79	    Description: Name of the CloudFormation Stack Creates name of API
80	    Type: String
81	    MinLength: 2
82	    MaxLength: 64
83	    Default: HMSA-Describe-Instance
84	Resources:
85	  DEVAPIRole:
86	    Type: 'AWS::IAM::Role'
87	    Properties:
88	      AssumeRolePolicyDocument:
89	        Version: 2012-10-17
90	        Statement:
91	          - Effect: Allow
92	            Principal:
93	              Service:
94	                - apigateway.amazonaws.com
95	            Action: 'sts:AssumeRole'
96	      Path: /
97	      ManagedPolicyArns:
98	        - >-
99	          arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
100	      Policies:
101	        - PolicyName: "API-EC2-Policy"
102	          PolicyDocument:
103	            Version: 2012-10-17
104	            Statement:
105	              - Effect: Allow
106	                Action: 'ec2:Describe*'
107	                Resource: '*'
108	              - Effect: Allow
109	                Action: 'elasticloadbalancing:Describe*'
110	                Resource: '*'
111	              - Effect: Allow
112	                Action:
113	                  - 'cloudwatch:ListMetrics'
114	                  - 'cloudwatch:GetMetricStatistics'
115	                  - 'cloudwatch:Describe*'
116	                Resource: '*'
117	              - Effect: Allow
118	                Action: 'autoscaling:Describe*'
119	                Resource: '*'
120	        - PolicyName: "API-CloudFormation-Policy"
121	          PolicyDocument:
122	            Version: 2012-10-17
123	            Statement:
124	              - Effect: Allow
125	                Action:
126	                  - 'cloudformation:Describe*'
127	                  - 'cloudformation:EstimateTemplateCost'
128	                  - 'cloudformation:Get*'
129	                  - 'cloudformation:List*'
130	                  - 'cloudformation:ValidateTemplate'
131	                  - 'cloudformation:Detect*'
132	                Resource: '*'
133	        - PolicyName: "API-vpc-Policy"
134	          PolicyDocument:
135	            Version: 2012-10-17
136	            Statement:
137	              - Effect: Allow
138	                Action:
139	                  - 'ec2:DescribeAccountAttributes'
140	                  - 'ec2:DescribeAddresses'
141	                  - 'ec2:DescribeClassicLinkInstances'
142	                  - 'ec2:DescribeCustomerGateways'
143	                  - 'ec2:DescribeDhcpOptions'
144	                  - 'ec2:DescribeEgressOnlyInternetGateways'
145	                  - 'ec2:DescribeFlowLogs'
146	                  - 'ec2:DescribeInternetGateways'
147	                  - 'ec2:DescribeMovingAddresses'
148	                  - 'ec2:DescribeNatGateways'
149	                  - 'ec2:DescribeNetworkAcls'
150	                  - 'ec2:DescribeNetworkInterfaceAttribute'
151	                  - 'ec2:DescribeNetworkInterfacePermissions'
152	                  - 'ec2:DescribeNetworkInterfaces'
153	                  - 'ec2:DescribePrefixLists'
154	                  - 'ec2:DescribeRouteTables'
155	                  - 'ec2:DescribeSecurityGroupReferences'
156	                  - 'ec2:DescribeSecurityGroups'
157	                  - 'ec2:DescribeStaleSecurityGroups'
158	                  - 'ec2:DescribeSubnets'
159	                  - 'ec2:DescribeTags'
160	                  - 'ec2:DescribeVpcAttribute'
161	                  - 'ec2:DescribeVpcClassicLink'
162	                  - 'ec2:DescribeVpcClassicLinkDnsSupport'
163	                  - 'ec2:DescribeVpcEndpoints'
164	                  - 'ec2:DescribeVpcEndpointConnectionNotifications'
165	                  - 'ec2:DescribeVpcEndpointConnections'
166	                  - 'ec2:DescribeVpcEndpointServiceConfigurations'
167	                  - 'ec2:DescribeVpcEndpointServicePermissions'
168	                  - 'ec2:DescribeVpcEndpointServices'
169	                  - 'ec2:DescribeVpcPeeringConnections'
170	                  - 'ec2:DescribeVpcs'
171	                  - 'ec2:DescribeVpnConnections'
172	                  - 'ec2:DescribeVpnGateways'
173	                Resource: '*'
174	        - PolicyName: "API-Log-Policy"
175	          PolicyDocument:
176	            Version: 2012-10-17
177	            Statement:
178	              - Effect: Allow
179	                Action:
180	                  - 'logs:CreateLogGroup'
181	                  - 'logs:CreateLogStream'
182	                  - 'logs:DescribeLogGroups'
183	                  - 'logs:DescribeLogStreams'
184	                  - 'logs:PutLogEvents'
185	                  - 'logs:GetLogEvents'
186	                  - 'logs:FilterLogEvents'
187	                Resource: '*'
188	        - PolicyName: "API-CodeCommit-Policy"
189	          PolicyDocument:
190	            Version: 2012-10-17
191	            Statement:
192	              - Effect: Allow
193	                Action:
194	                  - 'codecommit:BatchGet*'
195	                  - 'codecommit:BatchDescribe*'
196	                  - 'codecommit:Describe*'
197	                  - 'codecommit:EvaluatePullRequestApprovalRules'
198	                  - 'codecommit:Get*'
199	                  - 'codecommit:List*'
200	                  - 'codecommit:GitPull'
201	                Resource: '*'
202	              - Sid: CloudWatchEventsCodeCommitRulesReadOnlyAccess
203	                Effect: Allow
204	                Action:
205	                  - 'events:DescribeRule'
206	                  - 'events:ListTargetsByRule'
207	                Resource: 'arn:aws:events:*:*:rule/codecommit*'
208	              - Sid: SNSSubscriptionAccess
209	                Effect: Allow
210	                Action:
211	                  - 'sns:ListTopics'
212	                  - 'sns:ListSubscriptionsByTopic'
213	                  - 'sns:GetTopicAttributes'
214	                Resource: '*'
215	              - Sid: LambdaReadOnlyListAccess
216	                Effect: Allow
217	                Action:
218	                  - 'lambda:ListFunctions'
219	                Resource: '*'
220	              - Sid: IAMReadOnlyListAccess
221	                Effect: Allow
222	                Action:
223	                  - 'iam:ListUsers'
224	                Resource: '*'
225	              - Sid: IAMReadOnlyConsoleAccess
226	                Effect: Allow
227	                Action:
228	                  - 'iam:ListAccessKeys'
229	                  - 'iam:ListSSHPublicKeys'
230	                  - 'iam:ListServiceSpecificCredentials'
231	                  - 'iam:ListAccessKeys'
232	                  - 'iam:GetSSHPublicKey'
233	                Resource: 'arn:aws:iam::*:user/${aws:username}'
234	              - Sid: CodeStarNotificationsReadOnlyAccess
235	                Effect: Allow
236	                Action:
237	                  - 'codestar-notifications:DescribeNotificationRule'
238	                Resource: '*'
239	                Condition:
240	                  StringLike:
241	                    'codestar-notifications:NotificationsForResource': 'arn:aws:codecommit:*'
242	              - Sid: CodeStarNotificationsListAccess
243	                Effect: Allow
244	                Action:
245	                  - 'codestar-notifications:ListNotificationRules'
246	                  - 'codestar-notifications:ListEventTypes'
247	                  - 'codestar-notifications:ListTargets'
248	                Resource: '*'
249	              - Sid: AmazonCodeGuruReviewerReadOnlyAccess
250	                Effect: Allow
251	                Action:
252	                  - 'codeguru-reviewer:DescribeRepositoryAssociation'
253	                  - 'codeguru-reviewer:ListRepositoryAssociations'
254	                Resource: '*'
255	        - PolicyName: "API-s3-Policy"
256	          PolicyDocument:
257	            Version: '2012-10-17'
258	            Statement:
259	              - Effect: Allow
260	                Action:
261	                  - s3:Get*
262	                  - s3:List*
263	                Resource: "*"
264	        - PolicyName: "API-Codepipeline-Policy"
265	          PolicyDocument:
266	            Statement:
267	              - Action:
268	                  - 'codepipeline:GetPipeline'
269	                  - 'codepipeline:GetPipelineState'
270	                  - 'codepipeline:GetPipelineExecution'
271	                  - 'codepipeline:ListPipelineExecutions'
272	                  - 'codepipeline:ListActionExecutions'
273	                  - 'codepipeline:ListActionTypes'
274	                  - 'codepipeline:ListPipelines'
275	                  - 'codepipeline:ListTagsForResource'
276	                  - 'iam:ListRoles'
277	                  - 's3:GetBucketPolicy'
278	                  - 's3:GetObject'
279	                  - 's3:ListAllMyBuckets'
280	                  - 's3:ListBucket'
281	                  - 'codecommit:ListBranches'
282	                  - 'codecommit:ListRepositories'
283	                  - 'codedeploy:GetApplication'
284	                  - 'codedeploy:GetDeploymentGroup'
285	                  - 'codedeploy:ListApplications'
286	                  - 'codedeploy:ListDeploymentGroups'
287	                  - 'elasticbeanstalk:DescribeApplications'
288	                  - 'elasticbeanstalk:DescribeEnvironments'
289	                  - 'lambda:GetFunctionConfiguration'
290	                  - 'lambda:ListFunctions'
291	                  - 'opsworks:DescribeApps'
292	                  - 'opsworks:DescribeLayers'
293	                  - 'opsworks:DescribeStacks'
294	                  - 'codestar-notifications:ListNotificationRules'
295	                  - 'codestar-notifications:ListEventTypes'
296	                  - 'codestar-notifications:ListTargets'
297	                Effect: Allow
298	                Resource: '*'
299	              - Sid: CodeStarNotificationsReadOnlyAccess
300	                Effect: Allow
301	                Action:
302	                  - 'codestar-notifications:DescribeNotificationRule'
303	                Resource: '*'
304	                Condition:
305	                  StringLike:
306	                    'codestar-notifications:NotificationsForResource': 'arn:aws:codepipeline:*'
307	            Version: 2012-10-17
308	        - PolicyName: "API-CodeDeploy-Policy"
309	          PolicyDocument:
310	            Version: 2012-10-17
311	            Statement:
312	              - Action:
313	                  - 'codedeploy:Batch*'
314	                  - 'codedeploy:Get*'
315	                  - 'codedeploy:List*'
316	                Effect: Allow
317	                Resource: '*'
318	              - Sid: CodeStarNotificationsPowerUserAccess
319	                Effect: Allow
320	                Action:
321	                  - 'codestar-notifications:DescribeNotificationRule'
322	                Resource: '*'
323	                Condition:
324	                  StringLike:
325	                    'codestar-notifications:NotificationsForResource': 'arn:aws:codedeploy:*'
326	              - Sid: CodeStarNotificationsListAccess
327	                Effect: Allow
328	                Action:
329	                  - 'codestar-notifications:ListNotificationRules'
330	                  - 'codestar-notifications:ListEventTypes'
331	                  - 'codestar-notifications:ListTargets'
332	                Resource: '*'
333	        - PolicyName: "API-CodeBuild-Policy"
334	          PolicyDocument:
335	            Statement:
336	              - Action:
337	                  - 'codebuild:BatchGet*'
338	                  - 'codebuild:GetResourcePolicy'
339	                  - 'codebuild:List*'
340	                  - 'codebuild:DescribeTestCases'
341	                  - 'codecommit:GetBranch'
342	                  - 'codecommit:GetCommit'
343	                  - 'codecommit:GetRepository'
344	                  - 'cloudwatch:GetMetricStatistics'
345	                  - 'events:DescribeRule'
346	                  - 'events:ListTargetsByRule'
347	                  - 'events:ListRuleNamesByTarget'
348	                  - 'logs:GetLogEvents'
349	                Effect: Allow
350	                Resource: '*'
351	              - Sid: CodeStarNotificationsPowerUserAccess
352	                Effect: Allow
353	                Action:
354	                  - 'codestar-notifications:DescribeNotificationRule'
355	                Resource: '*'
356	                Condition:
357	                  StringLike:
358	                    'codestar-notifications:NotificationsForResource': 'arn:aws:codebuild:*'
359	              - Sid: CodeStarNotificationsListAccess
360	                Effect: Allow
361	                Action:
362	                  - 'codestar-notifications:ListNotificationRules'
363	                  - 'codestar-notifications:ListEventTypes'
364	                  - 'codestar-notifications:ListTargets'
365	                Resource: '*'
366	            Version: 2012-10-17
367	  APIGatewayCF:
368	    Type: "AWS::ApiGateway::RestApi"
369	    Properties:
370	      Name: !Ref APIGateWayName
371	      Description: "This API is created through Cloudformation to List Stacks"
372	  CodeCommitAPI:
373	    Type: "AWS::ApiGateway::RestApi"
374	    Properties:
375	      Name: !Ref APICodeCommitName
376	      Description: "This API is created through Cloudformation to List Code Commit Repositorys"
377	  CodeBuildAPI:
378	    Type: "AWS::ApiGateway::RestApi"
379	    Properties:
380	      Name: !Ref APICodeBuildtName
381	      Description: "This API is created through Cloudformation to List Code Commit Build"
382	  CodeDepolyAPI:
383	    Type: "AWS::ApiGateway::RestApi"
384	    Properties:
385	      Name: !Ref APICodeDeployName
386	      Description: "This API is created through Cloudformation to List Code Commit Deploy"
387	  CodePipelineAPi:
388	    Type: "AWS::ApiGateway::RestApi"
389	    Properties:
390	      Name: !Ref APICodePipelineName
391	      Description: "This API is created through Cloudformation to List Code Pipeline"
392	  S3TextFileAPi:
393	    Type: "AWS::ApiGateway::RestApi"
394	    Properties:
395	      Name: !Ref S3APIReadText
396	      Description: "This API is created through Cloudformation to Read Text"
397	  S3BucketListAPI:
398	    Type: "AWS::ApiGateway::RestApi"
399	    Properties:
400	      Name: !Ref APIS3ListBucket
401	      Description: "This API is created through Cloudformation to Bucket List"
402	#  DescribeEC2API:
403	#    Type: "AWS::ApiGateway::RestApi"
404	#    Properties:
405	#      Name: !Ref APIEC2Describe
406	#      Description: "This API is created through Cloudformation to List Stacks"
407	  ResourcegatewayCF:
408	    Type: 'AWS::ApiGateway::Resource'
409	    Properties:
410	      RestApiId: !Ref APIGatewayCF
411	      ParentId: !GetAtt
412	          - APIGatewayCF
413	          - RootResourceId
414	      PathPart: Resourcegeteway
415	  CodeCommitResource:
416	    Type: 'AWS::ApiGateway::Resource'
417	    Properties:
418	      RestApiId: !Ref CodeCommitAPI
419	      ParentId: !GetAtt
420	          - CodeCommitAPI
421	          - RootResourceId
422	      PathPart: CodeCommit
423	  CodeBuildResource:
424	    Type: 'AWS::ApiGateway::Resource'
425	    Properties:
426	      RestApiId: !Ref CodeBuildAPI
427	      ParentId: !GetAtt
428	          - CodeBuildAPI
429	          - RootResourceId
430	      PathPart: CodeBuild
431	  CodeDeployResource:
432	    Type: 'AWS::ApiGateway::Resource'
433	    Properties:
434	      RestApiId: !Ref CodeDepolyAPI
435	      ParentId: !GetAtt
436	          - CodeDepolyAPI
437	          - RootResourceId
438	      PathPart: CodeDepoly
439	  CodePipelineResource:
440	    Type: 'AWS::ApiGateway::Resource'
441	    Properties:
442	      RestApiId: !Ref CodePipelineAPi
443	      ParentId: !GetAtt
444	          - CodePipelineAPi
445	          - RootResourceId
446	      PathPart: CodePipeline
447	  S3TextFileResource:
448	    Type: 'AWS::ApiGateway::Resource'
449	    Properties:
450	      RestApiId: !Ref S3TextFileAPi
451	      ParentId: !GetAtt
452	          - S3TextFileAPi
453	          - RootResourceId
454	      PathPart: s3readwebpage
455	  S3BucketListResource:
456	    Type: 'AWS::ApiGateway::Resource'
457	    Properties:
458	      RestApiId: !Ref S3BucketListAPI
459	      ParentId: !GetAtt
460	          - S3BucketListAPI
461	          - RootResourceId
462	      PathPart: ResourceBucketList
463	#  DescribeEC2Resource:
464	#    Type: 'AWS::ApiGateway::Resource'
465	#    Properties:
466	#      RestApiId: !Ref DescribeEC2API
467	#      ParentId: !GetAtt
468	#          - DescribeEC2API
469	#          - RootResourceId
470	#      PathPart: Resourcegeteway
471	  APIMethodCF:
472	    Type: 'AWS::ApiGateway::Method'
473	    Properties:
474	      RestApiId: !Ref APIGatewayCF
475	      ResourceId: !Ref ResourcegatewayCF
476	      HttpMethod: GET
477	      AuthorizationType: NONE
478	      Integration:
479	        Type: AWS
480	        IntegrationHttpMethod: GET
481	        Uri: arn:aws:apigateway:us-west-2:cloudformation:action/ListStacks
482	#            arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key
483	        Credentials: !GetAtt
484	          - DEVAPIRole
485	          - Arn
486	        IntegrationResponses:
487	          - ResponseParameters:
488	              method.response.header.Access-Control-Allow-Headers: >-
489	                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'
490	              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
491	              method.response.header.Access-Control-Allow-Origin: '''*'''
492	            StatusCode: 200
493	      MethodResponses:
494	        - ResponseParameters:
495	            method.response.header.Access-Control-Allow-Headers: true
496	            method.response.header.Access-Control-Allow-Methods: true
497	            method.response.header.Access-Control-Allow-Origin: true
498	          StatusCode: 200
499	  CodeCommitMethod:
500	    Type: 'AWS::ApiGateway::Method'
501	    Properties:
502	      RestApiId: !Ref CodeCommitAPI
503	      ResourceId: !Ref CodeCommitResource
504	      HttpMethod: GET
505	      AuthorizationType: NONE
506	      Integration:
507	        Type: AWS
508	        IntegrationHttpMethod: GET
509	        Uri: arn:aws:apigateway:us-west-2:codecommit:action/ListRepositories
510	#            arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key
511	        Credentials: !GetAtt
512	          - DEVAPIRole
513	          - Arn
514	        IntegrationResponses:
515	          - ResponseParameters:
516	              method.response.header.Access-Control-Allow-Headers: >-
517	                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'
518	              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
519	              method.response.header.Access-Control-Allow-Origin: '''*'''
520	            StatusCode: 200
521	      MethodResponses:
522	        - ResponseParameters:
523	            method.response.header.Access-Control-Allow-Headers: true
524	            method.response.header.Access-Control-Allow-Methods: true
525	            method.response.header.Access-Control-Allow-Origin: true
526	          StatusCode: 200
527	  CodeBuildMethod:
528	    Type: 'AWS::ApiGateway::Method'
529	    Properties:
530	      RestApiId: !Ref CodeBuildAPI
531	      ResourceId: !Ref CodeBuildResource
532	      HttpMethod: GET
533	      AuthorizationType: NONE
534	      Integration:
535	        Type: AWS
536	        IntegrationHttpMethod: GET
537	        Uri: arn:aws:apigateway:us-west-2:codecommit:action/ListBuilds
538	#            arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key
539	        Credentials: !GetAtt
540	          - DEVAPIRole
541	          - Arn
542	        IntegrationResponses:
543	          - ResponseParameters:
544	              method.response.header.Access-Control-Allow-Headers: >-
545	                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'
546	              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
547	              method.response.header.Access-Control-Allow-Origin: '''*'''
548	            StatusCode: 200
549	      MethodResponses:
550	        - ResponseParameters:
551	            method.response.header.Access-Control-Allow-Headers: true
552	            method.response.header.Access-Control-Allow-Methods: true
553	            method.response.header.Access-Control-Allow-Origin: true
554	          StatusCode: 200
555	  CodeDeployMethod:
556	    Type: 'AWS::ApiGateway::Method'
557	    Properties:
558	      RestApiId: !Ref CodeDepolyAPI
559	      ResourceId: !Ref CodeDeployResource
560	      HttpMethod: GET
561	      AuthorizationType: NONE
562	      Integration:
563	        Type: AWS
564	        IntegrationHttpMethod: GET
565	        Uri: arn:aws:apigateway:us-west-2:codedeploy:action/ListDeployments
566	#            arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key
567	        Credentials: !GetAtt
568	          - DEVAPIRole
569	          - Arn
570	        IntegrationResponses:
571	          - ResponseParameters:
572	              method.response.header.Access-Control-Allow-Headers: >-
573	                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'
574	              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
575	              method.response.header.Access-Control-Allow-Origin: '''*'''
576	            StatusCode: 200
577	      MethodResponses:
578	        - ResponseParameters:
579	            method.response.header.Access-Control-Allow-Headers: true
580	            method.response.header.Access-Control-Allow-Methods: true
581	            method.response.header.Access-Control-Allow-Origin: true
582	          StatusCode: 200
583	  CodePipelineMethod:
584	    Type: 'AWS::ApiGateway::Method'
585	    Properties:
586	      RestApiId: !Ref CodePipelineAPi
587	      ResourceId: !Ref CodePipelineResource
588	      HttpMethod: GET
589	      AuthorizationType: NONE
590	      Integration:
591	        Type: AWS
592	        IntegrationHttpMethod: GET
593	        Uri: arn:aws:apigateway:us-west-2:cloudformation:action/ListStacks
594	#            arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key
595	        Credentials: !GetAtt
596	          - DEVAPIRole
597	          - Arn
598	        IntegrationResponses:
599	          - ResponseParameters:
600	              method.response.header.Access-Control-Allow-Headers: >-
601	                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'
602	              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
603	              method.response.header.Access-Control-Allow-Origin: '''*'''
604	            StatusCode: 200
605	      MethodResponses:
606	        - ResponseParameters:
607	            method.response.header.Access-Control-Allow-Headers: true
608	            method.response.header.Access-Control-Allow-Methods: true
609	            method.response.header.Access-Control-Allow-Origin: true
610	          StatusCode: 200
611	  S3eadTextMethod:
612	    Type: 'AWS::ApiGateway::Method'
613	    Properties:
614	      RestApiId: !Ref S3TextFileAPi
615	      ResourceId: !Ref S3TextFileResource
616	      HttpMethod: GET
617	      AuthorizationType: NONE
618	      Integration:
619	        Type: AWS
620	        IntegrationHttpMethod: GET
621	        Uri: arn:aws:apigateway:us-west-2:s3:path/code-pipeline-input-data-dxcapd-us-west-2/test1/test1.txt
622	#             arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}
623	#            arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key
624	        Credentials: !GetAtt
625	          - DEVAPIRole
626	          - Arn
627	        IntegrationResponses:
628	          - ResponseParameters:
629	              method.response.header.Access-Control-Allow-Headers: >-
630	                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'
631	              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
632	              method.response.header.Access-Control-Allow-Origin: '''*'''
633	            StatusCode: 200
634	      MethodResponses:
635	        - ResponseParameters:
636	            method.response.header.Access-Control-Allow-Headers: true
637	            method.response.header.Access-Control-Allow-Methods: true
638	            method.response.header.Access-Control-Allow-Origin: true
639	          StatusCode: 200
640	  S3ListBucketMethod:
641	    Type: 'AWS::ApiGateway::Method'
642	    Properties:
643	      RestApiId: !Ref S3BucketListAPI
644	      ResourceId: !Ref S3BucketListResource
645	      HttpMethod: GET
646	      AuthorizationType: NONE
647	      Integration:
648	        Type: AWS
649	        IntegrationHttpMethod: GET
650	        Uri: arn:aws:apigateway:us-west-2:s3:action/ListBuckets
651	#            arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key
652	        Credentials: !GetAtt
653	          - DEVAPIRole
654	          - Arn
655	        IntegrationResponses:
656	          - ResponseParameters:
657	              method.response.header.Access-Control-Allow-Headers: >-
658	                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'
659	              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
660	              method.response.header.Access-Control-Allow-Origin: '''*'''
661	            StatusCode: 200
662	      MethodResponses:
663	        - ResponseParameters:
664	            method.response.header.Access-Control-Allow-Headers: true
665	            method.response.header.Access-Control-Allow-Methods: true
666	            method.response.header.Access-Control-Allow-Origin: true
667	          StatusCode: 200
668	#  DescribeEC2Method:
669	#    Type: 'AWS::ApiGateway::Method'
670	#    Properties:
671	#      RestApiId: !Ref DescribeEC2API
672	#      ResourceId: !Ref DescribeEC2Resource
673	#      HttpMethod: GET
674	#      AuthorizationType: NONE
675	#      Integration:
676	#        Type: AWS
677	#        IntegrationHttpMethod: GET
678	#        Uri: arn:aws:apigateway:us-west-2:ec2:action/DescribeInstances
679	#            arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key
680	#        Credentials: !GetAtt
681	#          - DEVAPIRole
682	#          - Arn
683	#        IntegrationResponses:
684	#          - ResponseParameters:
685	#              method.response.header.Access-Control-Allow-Headers: >-
686	#                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,x-requested-with'
687	#              method.response.header.Access-Control-Allow-Methods: '''GET,OPTIONS'''
688	#              method.response.header.Access-Control-Allow-Origin: '''*'''
689	#            StatusCode: 200
690	  APIDeployCF:
691	    DependsOn:
692	      - APIMethodCF
693	    Type: 'AWS::ApiGateway::Deployment'
694	    Properties:
695	      RestApiId: !Ref APIGatewayCF
696	      Description: Staged Devices endpoint
697	      StageName: devcf
698	  CodeCommitDeploy:
699	    DependsOn:
700	      - CodeCommitMethod
701	    Type: 'AWS::ApiGateway::Deployment'
702	    Properties:
703	      RestApiId: !Ref CodeCommitAPI
704	      Description: Staged Devices endpoint
705	      StageName: devcodecommit
706	  CodeBuildDeploy:
707	    DependsOn:
708	      - CodeBuildMethod
709	    Type: 'AWS::ApiGateway::Deployment'
710	    Properties:
711	      RestApiId: !Ref CodeBuildAPI
712	      Description: Staged Devices endpoint
713	      StageName: devcodebuild
714	  CodeDeployStage:
715	    DependsOn:
716	      - CodeDeployMethod
717	    Type: 'AWS::ApiGateway::Deployment'
718	    Properties:
719	      RestApiId: !Ref CodeDepolyAPI
720	      Description: Staged Devices endpoint
721	      StageName: devcodedeploy
722	  CodePipelineDeploy:
723	    DependsOn:
724	      - CodePipelineMethod
725	    Type: 'AWS::ApiGateway::Deployment'
726	    Properties:
727	      RestApiId: !Ref CodePipelineAPi
728	      Description: Staged Devices endpoint
729	      StageName: devcodepipeline
730	  S3ReadTextDeploy:
731	    DependsOn:
732	      - S3eadTextMethod
733	    Type: 'AWS::ApiGateway::Deployment'
734	    Properties:
735	      RestApiId: !Ref S3TextFileAPi
736	      Description: Staged Devices endpoint
737	      StageName: devreadtext
738	  S3ListBucketDeploy:
739	    DependsOn:
740	      - S3ListBucketMethod
741	    Type: 'AWS::ApiGateway::Deployment'
742	    Properties:
743	      RestApiId: !Ref S3BucketListAPI
744	      Description: Staged Devices endpoint
745	      StageName: devlistbucket
746	Outputs:
747	  APIDeployCF:
748	    Description: The API Deploy CF
749	    Value: !Ref APIDeployCF
750	    Export:
751	      Name: !Sub ${AWS::StackName}-APIDeployCF
752	  CodeCommitDeploy:
753	    Description: The Code Commit Deploy
754	    Value: !Ref CodeCommitDeploy
755	    Export:
756	      Name: !Sub ${AWS::StackName}-CodeCommitDeploy
757	  CodeBuildDeploy:
758	    Description: The Code Build Deploy
759	    Value: !Ref CodeBuildDeploy
760	    Export:
761	      Name: !Sub ${AWS::StackName}-CodeBuildDeploy
762	  CodeDeployStage:
763	    Description: The Code Deploy Stage
764	    Value: !Ref CodeDeployStage
765	    Export:
766	      Name: !Sub ${AWS::StackName}-CodeDeployStage
767	  CodePipelineDeploy:
768	    Description: The Code Pipeline Deploy
769	    Value: !Ref CodePipelineDeploy
770	    Export:
771	      Name: !Sub ${AWS::StackName}-CodePipelineDeploy
772	  S3ReadTextDeploy:
773	    Description: The S3 Read Text Deploy
774	    Value: !Ref S3ReadTextDeploy
775	    Export:
776	      Name: !Sub ${AWS::StackName}-S3ReadTextDeploy
777	  S3ListBucketDeploy:
778	    Description: The S3 List Bucket Deploy
779	    Value: !Ref S3ListBucketDeploy
780	    Export:
781	      Name: !Sub ${AWS::StackName}-S3ListBucketDeploy
782	
