AWSTemplateFormatVersion: '2010-09-09'
2	Description: Application-CICD Template.
3	  Creates AWS CICD resources and create Code-Commit, Code-Build, Code-deploy and Code-Pipeline from this template.
4	Metadata:
5	  AWS::CloudFormation::Interface:
6	    ParameterGroups:
7	      - Label:
8	          default: Environment Configuration
9	        Parameters:
10	          - AccountName
11	          - EnvironmentName
12	      - Label:
13	          default: Stack Dependencies
14	        Parameters:
15	          - BucketsStackName
16	      - Label:
17	          default: System Configuration
18	        Parameters:
19	          - BranchName
20	          - RepositoryName
21	          - CodePipelineName
22	          - BuildProjectName
23	          - CodeDeployApplication
24	          - CodeDeployDeploymentGroup
25	      - Label:
26	          default: Application Configuration
27	        Parameters:
28	          - EC2ApplicationName
29	    ParameterLabels:
30	      AccountName:
31	        default: Account Name
32	      EnvironmentName:
33	        default: Environment Name
34	      BuildBucketsStackName:
35	        default: Build Buckets Stack Name
36	      BranchName:
37	        default: Branch Name
38	      RepositoryName:
39	        default: Repository Name
40	      CodePipelineName:
41	        default: Code Pipeline Name
42	      BuildProjectName:
43	        default: Build Project Name
44	      CodeDeployApplication:
45	        default: Code Deploy Application
46	      CodeDeployDeploymentGroup:
47	        default: Code Deploy DeploymentGroup
48	      EC2ApplicationName:
49	            default: EC2 Application Name
50	Parameters:
51	  EnvironmentName:
52	    Description: Name of the Environment associated with the Stack
53	    Type: String
54	    Default: Production
55	    AllowedValues:
56	      - Production
57	      - Staging
58	      - UAT
59	      - QA
60	      - Testing
61	      - Development
62	      - Build
63	      - Core
64	      - Recovery
65	      - Log
66	      - Identity
67	      - Management
68	      - Organization
69	  AccountName:
70	    Description: Name of the Account associated with the Stack
71	    Type: String
72	    Default: Production
73	    AllowedValues:
74	      - Production
75	      - Staging
76	      - UAT
77	      - QA
78	      - Testing
79	      - Development
80	      - Build
81	      - Core
82	      - Recovery
83	      - Log
84	      - Management
85	      - Jumpstart
86	      - Organization
87	  BucketsStackName:
88	      Description: Name of the CloudFormation Stack containing Build Buckets
89	      Type: String
90	      MinLength: 2
91	      MaxLength: 64
92	      Default: DataLakeBuckets
93	      AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
94	      ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
95	  BranchName:
96	    Description: 'CodeCommit branch name for all the resources '
97	    Type: String
98	    Default: master
99	  RepositoryName:
100	    Description: CodeCommit repostiory which contains CloudFormation template for pipeline
101	    Type: String
102	    Default: HMSA-Codecommit-Repositor
103	  CodePipelineName:
104	    Description: pipeline name
105	    Type: String
106	    Default: HMSA-Codepipeline
107	  BuildProjectName:
108	    Description: Buidl Project name
109	    Type: String
110	    Default: HMSA-Codebuild
111	  CodeDeployApplication:
112	    Description: CodeDeploy application Name
113	    Type: String
114	    Default: HMSA-CodeDeploy-Application
115	  CodeDeployDeploymentGroup:
116	    Description: CodeDeploy deployment group
117	    Type: String
118	    Default: HMSA-CodeDeploy-DeploymentGroup
119	  EC2ApplicationName:
120	    Description: Name of the Application associated with the Stack
121	    Type: String
122	    MinLength: 2
123	    MaxLength: 32
124	    Default: CICD-Application
125	  InstanceType:
126	    Description: WebServer EC2 instance type
127	    Type: String
128	    Default: t2.small
129	    AllowedValues:
130	      - t1.micro
131	      - t2.nano
132	      - t2.micro
133	      - t2.small
134	      - t2.medium
135	      - t2.large
136	      - m1.small
137	      - m1.medium
138	      - m1.large
139	      - m1.xlarge
140	      - m2.xlarge
141	      - m2.2xlarge
142	      - m2.4xlarge
143	      - m3.medium
144	      - m3.large
145	      - m3.xlarge
146	      - m3.2xlarge
147	      - m4.large
148	      - m4.xlarge
149	      - m4.2xlarge
150	      - m4.4xlarge
151	      - m4.10xlarge
152	      - c1.medium
153	      - c1.xlarge
154	      - c3.large
155	      - c3.xlarge
156	      - c3.2xlarge
157	      - c3.4xlarge
158	      - c3.8xlarge
159	      - c4.large
160	      - c4.xlarge
161	      - c4.2xlarge
162	      - c4.4xlarge
163	      - c4.8xlarge
164	      - g2.2xlarge
165	      - g2.8xlarge
166	      - r3.large
167	      - r3.xlarge
168	      - r3.2xlarge
169	      - r3.4xlarge
170	      - r3.8xlarge
171	      - i2.xlarge
172	      - i2.2xlarge
173	      - i2.4xlarge
174	      - i2.8xlarge
175	      - d2.xlarge
176	      - d2.2xlarge
177	      - d2.4xlarge
178	      - d2.8xlarge
179	      - hi1.4xlarge
180	      - hs1.8xlarge
181	      - cr1.8xlarge
182	      - cc2.8xlarge
183	      - cg1.4xlarge
184	    ConstraintDescription: must be a valid EC2 instance type.
185	  SSHLocation:
186	    Description: ' The IP address range that can be used to SSH to the EC2 instances'
187	    Type: String
188	    MinLength: '9'
189	    MaxLength: '18'
190	    Default: 0.0.0.0/0
191	    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
192	    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
193	  KeyName:
194	    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
195	    Type: 'AWS::EC2::KeyPair::KeyName'
196	    Default: 'administrator'
197	    ConstraintDescription: the name of an existing EC2 KeyPair administrator.
198	Mappings:
199	  AWSInstanceType2Arch:
200	    t1.micro:
201	      Arch: HVM64
202	    t2.nano:
203	      Arch: HVM64
204	    t2.micro:
205	      Arch: HVM64
206	    t2.small:
207	      Arch: HVM64
208	    t2.medium:
209	      Arch: HVM64
210	    t2.large:
211	      Arch: HVM64
212	    m1.small:
213	      Arch: HVM64
214	    m1.medium:
215	      Arch: HVM64
216	    m1.large:
217	      Arch: HVM64
218	    m1.xlarge:
219	      Arch: HVM64
220	    m2.xlarge:
221	      Arch: HVM64
222	    m2.2xlarge:
223	      Arch: HVM64
224	    m2.4xlarge:
225	      Arch: HVM64
226	    m3.medium:
227	      Arch: HVM64
228	    m3.large:
229	      Arch: HVM64
230	    m3.xlarge:
231	      Arch: HVM64
232	    m3.2xlarge:
233	      Arch: HVM64
234	    m4.large:
235	      Arch: HVM64
236	    m4.xlarge:
237	      Arch: HVM64
238	    m4.2xlarge:
239	      Arch: HVM64
240	    m4.4xlarge:
241	      Arch: HVM64
242	    m4.10xlarge:
243	      Arch: HVM64
244	    c1.medium:
245	      Arch: HVM64
246	    c1.xlarge:
247	      Arch: HVM64
248	    c3.large:
249	      Arch: HVM64
250	    c3.xlarge:
251	      Arch: HVM64
252	    c3.2xlarge:
253	      Arch: HVM64
254	    c3.4xlarge:
255	      Arch: HVM64
256	    c3.8xlarge:
257	      Arch: HVM64
258	    c4.large:
259	      Arch: HVM64
260	    c4.xlarge:
261	      Arch: HVM64
262	    c4.2xlarge:
263	      Arch: HVM64
264	    c4.4xlarge:
265	      Arch: HVM64
266	    c4.8xlarge:
267	      Arch: HVM64
268	    g2.2xlarge:
269	      Arch: HVMG2
270	    g2.8xlarge:
271	      Arch: HVMG2
272	    r3.large:
273	      Arch: HVM64
274	    r3.xlarge:
275	      Arch: HVM64
276	    r3.2xlarge:
277	      Arch: HVM64
278	    r3.4xlarge:
279	      Arch: HVM64
280	    r3.8xlarge:
281	      Arch: HVM64
282	    i2.xlarge:
283	      Arch: HVM64
284	    i2.2xlarge:
285	      Arch: HVM64
286	    i2.4xlarge:
287	      Arch: HVM64
288	    i2.8xlarge:
289	      Arch: HVM64
290	    d2.xlarge:
291	      Arch: HVM64
292	    d2.2xlarge:
293	      Arch: HVM64
294	    d2.4xlarge:
295	      Arch: HVM64
296	    d2.8xlarge:
297	      Arch: HVM64
298	    hi1.4xlarge:
299	      Arch: HVM64
300	    hs1.8xlarge:
301	      Arch: HVM64
302	    cr1.8xlarge:
303	      Arch: HVM64
304	    cc2.8xlarge:
305	      Arch: HVM64
306	  AWSInstanceType2NATArch:
307	    t1.micro:
308	      Arch: NATHVM64
309	    t2.nano:
310	      Arch: NATHVM64
311	    t2.micro:
312	      Arch: NATHVM64
313	    t2.small:
314	      Arch: NATHVM64
315	    t2.medium:
316	      Arch: NATHVM64
317	    t2.large:
318	      Arch: NATHVM64
319	    m1.small:
320	      Arch: NATHVM64
321	    m1.medium:
322	      Arch: NATHVM64
323	    m1.large:
324	      Arch: NATHVM64
325	    m1.xlarge:
326	      Arch: NATHVM64
327	    m2.xlarge:
328	      Arch: NATHVM64
329	    m2.2xlarge:
330	      Arch: NATHVM64
331	    m2.4xlarge:
332	      Arch: NATHVM64
333	    m3.medium:
334	      Arch: NATHVM64
335	    m3.large:
336	      Arch: NATHVM64
337	    m3.xlarge:
338	      Arch: NATHVM64
339	    m3.2xlarge:
340	      Arch: NATHVM64
341	    m4.large:
342	      Arch: NATHVM64
343	    m4.xlarge:
344	      Arch: NATHVM64
345	    m4.2xlarge:
346	      Arch: NATHVM64
347	    m4.4xlarge:
348	      Arch: NATHVM64
349	    m4.10xlarge:
350	      Arch: NATHVM64
351	    c1.medium:
352	      Arch: NATHVM64
353	    c1.xlarge:
354	      Arch: NATHVM64
355	    c3.large:
356	      Arch: NATHVM64
357	    c3.xlarge:
358	      Arch: NATHVM64
359	    c3.2xlarge:
360	      Arch: NATHVM64
361	    c3.4xlarge:
362	      Arch: NATHVM64
363	    c3.8xlarge:
364	      Arch: NATHVM64
365	    c4.large:
366	      Arch: NATHVM64
367	    c4.xlarge:
368	      Arch: NATHVM64
369	    c4.2xlarge:
370	      Arch: NATHVM64
371	    c4.4xlarge:
372	      Arch: NATHVM64
373	    c4.8xlarge:
374	      Arch: NATHVM64
375	    g2.2xlarge:
376	      Arch: NATHVMG2
377	    g2.8xlarge:
378	      Arch: NATHVMG2
379	    r3.large:
380	      Arch: NATHVM64
381	    r3.xlarge:
382	      Arch: NATHVM64
383	    r3.2xlarge:
384	      Arch: NATHVM64
385	    r3.4xlarge:
386	      Arch: NATHVM64
387	    r3.8xlarge:
388	      Arch: NATHVM64
389	    i2.xlarge:
390	      Arch: NATHVM64
391	    i2.2xlarge:
392	      Arch: NATHVM64
393	    i2.4xlarge:
394	      Arch: NATHVM64
395	    i2.8xlarge:
396	      Arch: NATHVM64
397	    d2.xlarge:
398	      Arch: NATHVM64
399	    d2.2xlarge:
400	      Arch: NATHVM64
401	    d2.4xlarge:
402	      Arch: NATHVM64
403	    d2.8xlarge:
404	      Arch: NATHVM64
405	    hi1.4xlarge:
406	      Arch: NATHVM64
407	    hs1.8xlarge:
408	      Arch: NATHVM64
409	    cr1.8xlarge:
410	      Arch: NATHVM64
411	    cc2.8xlarge:
412	      Arch: NATHVM64
413	  AWSRegionArch2AMI:
414	    us-east-1:
415	      HVM64: ami-0080e4c5bc078760e
416	      HVMG2: ami-0aeb704d503081ea6
417	    us-west-2:
418	      HVM64: ami-01e24be29428c15b2
419	      HVMG2: ami-0fe84a5b4563d8f27
420	    us-west-1:
421	      HVM64: ami-0ec6517f6edbf8044
422	      HVMG2: ami-0a7fc72dc0e51aa77
423	    eu-west-1:
424	      HVM64: ami-08935252a36e25f85
425	      HVMG2: ami-0d5299b1c6112c3c7
426	    eu-west-2:
427	      HVM64: ami-01419b804382064e4
428	      HVMG2: NOT_SUPPORTED
429	    eu-west-3:
430	      HVM64: ami-0dd7e7ed60da8fb83
431	      HVMG2: NOT_SUPPORTED
432	    eu-central-1:
433	      HVM64: ami-0cfbf4f6db41068ac
434	      HVMG2: ami-0aa1822e3eb913a11
435	    eu-north-1:
436	      HVM64: ami-86fe70f8
437	      HVMG2: ami-32d55b4c
438	    ap-northeast-1:
439	      HVM64: ami-00a5245b4816c38e6
440	      HVMG2: ami-09d0e0e099ecabba2
441	    ap-northeast-2:
442	      HVM64: ami-00dc207f8ba6dc919
443	      HVMG2: NOT_SUPPORTED
444	    ap-northeast-3:
445	      HVM64: ami-0b65f69a5c11f3522
446	      HVMG2: NOT_SUPPORTED
447	    ap-southeast-1:
448	      HVM64: ami-05b3bcf7f311194b3
449	      HVMG2: ami-0e46ce0d6a87dc979
450	    ap-southeast-2:
451	      HVM64: ami-02fd0b06f06d93dfc
452	      HVMG2: ami-0c0ab057a101d8ff2
453	    ap-south-1:
454	      HVM64: ami-0ad42f4f66f6c1cc9
455	      HVMG2: ami-0244c1d42815af84a
456	    us-east-2:
457	      HVM64: ami-0cd3dfa4e37921605
458	      HVMG2: NOT_SUPPORTED
459	    ca-central-1:
460	      HVM64: ami-07423fb63ea0a0930
461	      HVMG2: NOT_SUPPORTED
462	    sa-east-1:
463	      HVM64: ami-05145e0b28ad8e0b2
464	      HVMG2: NOT_SUPPORTED
465	    cn-north-1:
466	      HVM64: ami-053617c9d818c1189
467	      HVMG2: NOT_SUPPORTED
468	    cn-northwest-1:
469	      HVM64: ami-0f7937761741dc640
470	      HVMG2: NOT_SUPPORTED
471	Resources:
472	  Ec2RoleCICD:
473	    Type: AWS::IAM::Role
474	    Properties:
475	      Path: /
476	      AssumeRolePolicyDocument:
477	        Version: 2012-10-17
478	        Statement:
479	          - Effect: Allow
480	            Principal:
481	              Service:
482	                - ec2.amazonaws.com
483	            Action:
484	              - sts:AssumeRole
485	      Policies:
486	        - PolicyName: ec2ScriptFromS3Policy
487	          PolicyDocument:
488	            Version: 2012-10-17
489	            Statement:
490	              - Effect: Allow
491	                Action:
492	                  - ec2:*
493	                  - s3:*
494	                Resource: '*'
495	  CodePipelineServiceRole:
496	    Type: 'AWS::IAM::Role'
497	    Properties:
498	      AssumeRolePolicyDocument:
499	        Version: 2012-10-17
500	        Statement:
501	          - Effect: Allow
502	            Principal:
503	              Service:
504	                - codepipeline.amazonaws.com
505	                - codebuild.amazonaws.com
506	                - codedeploy.amazonaws.com
507	            Action: 'sts:AssumeRole'
508	      Path: /
509	      Policies:
510	        - PolicyName: AWS-CodePipeline-Service
511	          PolicyDocument:
512	            Version: 2012-10-17
513	            Statement:
514	              - Effect: Allow
515	                Action:
516	                  - 'codecommit:CancelUploadArchive'
517	                  - 'codecommit:GetBranch'
518	                  - 'codecommit:GetCommit'
519	                  - 'codecommit:GetUploadArchiveStatus'
520	                  - 'codecommit:UploadArchive'
521	                Resource: '*'
522	              - Effect: Allow
523	                Action:
524	                  - 'codedeploy:CreateDeployment'
525	                  - 'codedeploy:GetApplicationRevision'
526	                  - 'codedeploy:GetDeployment'
527	                  - 'codedeploy:GetDeploymentConfig'
528	                  - 'codedeploy:RegisterApplicationRevision'
529	                Resource: '*'
530	              - Effect: Allow
531	                Action:
532	                  - 'codebuild:BatchGetBuilds'
533	                  - 'codebuild:StartBuild'
534	                Resource: '*'
535	              - Effect: Allow
536	                Action:
537	                  - 'devicefarm:ListProjects'
538	                  - 'devicefarm:ListDevicePools'
539	                  - 'devicefarm:GetRun'
540	                  - 'devicefarm:GetUpload'
541	                  - 'devicefarm:CreateUpload'
542	                  - 'devicefarm:ScheduleRun'
543	                Resource: '*'
544	              - Effect: Allow
545	                Action:
546	                  - 'lambda:InvokeFunction'
547	                  - 'lambda:ListFunctions'
548	                Resource: '*'
549	              - Effect: Allow
550	                Action:
551	                  - 'iam:PassRole'
552	                  - 'iam:GetPolicy'
553	                  - 'iam:CreatePolicy'
554	                  - 'iam:DeletePolicy'
555	                  - 'iam:ListPolicyVersions'
556	                Resource: '*'
557	              - Effect: Allow
558	                Action:
559	                  - 'elasticbeanstalk:*'
560	                  - 'ec2:*'
561	                  - 'elasticloadbalancing:*'
562	                  - 'autoscaling:*'
563	                  - 'cloudwatch:*'
564	                  - 's3:*'
565	                  - 'sns:*'
566	                  - 'cloudformation:*'
567	                  - 'rds:*'
568	                  - 'sqs:*'
569	                  - 'ecs:*'
570	                Resource: '*'
571	              - Effect: Allow
572	                Action:
573	                - 'logs:*'
574	                - 'ec2:CreateNetworkInterface'
575	                - 'ec2:DescribeNetworkInterfaces'
576	                - 'ec2:DeleteNetworkInterface'
577	                - 'ec2:DescribeSubnets'
578	                - 'ec2:DescribeSecurityGroups'
579	                - 'ec2:DescribeDhcpOptions'
580	                - 'ec2:DescribeVpcs'
581	                - 'ec2:CreateNetworkInterfacePermission'
582	                Resource: '*'
583	  MyInstanceProfile:
584	    Type: "AWS::IAM::InstanceProfile"
585	    Properties:
586	      Path: "/"
587	      Roles:
588	        - !Ref Ec2RoleCICD
589	  WebServerInstance:
590	    Type: 'AWS::EC2::Instance'
591	    Properties:
592	      ImageId:
593	            !FindInMap
594	            - AWSRegionArch2AMI
595	            - !Ref 'AWS::Region'
596	            - !FindInMap
597	              - AWSInstanceType2Arch
598	              - !Ref InstanceType
599	              - Arch
600	      IamInstanceProfile: !Ref MyInstanceProfile
601	      SecurityGroups:
602	        - !Ref WebServerSecurityGroup
603	      KeyName: !Ref KeyName
604	      # InstanceType: !Ref InstanceType.
605	      UserData:
606	        Fn::Base64: !Sub |
607	            #!/bin/bash
608	            yum -y update
609	            yum install -y ruby
610	            yum install -y aws-cli
611	            cd /home/ec2-user
612	            aws s3 cp s3://aws-codedeploy-us-west-2/latest/install . --region us-west-2
613	            chmod +x ./install
614	            ./install auto
615	            yum update -y aws-cfn-bootstrap
616	            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource WebServerInstance --region ${AWS::Region}
617	      Tags:
618	        - Key: Name
619	          Value: !Sub ${EC2ApplicationName}-Instance
620	          # Value: !Sub CICD-Application-Instance
621	    CreationPolicy:
622	      ResourceSignal:
623	        Count: 1
624	        Timeout: PT10M
625	  WebServerSecurityGroup:
626	    Type: 'AWS::EC2::SecurityGroup'
627	    Properties:
628	      GroupDescription: Enable HTTP access via port 80
629	      SecurityGroupIngress:
630	        - IpProtocol: tcp
631	          FromPort: '80'
632	          ToPort: '80'
633	          CidrIp: 0.0.0.0/0
634	        - IpProtocol: tcp
635	          FromPort: '22'
636	          ToPort: '22'
637	          CidrIp: !Ref SSHLocation
638	  CodeRepository:
639	    Type: 'AWS::CodeCommit::Repository'
640	    Properties:
641	      RepositoryName: !Ref RepositoryName
642	  BuildProject:
643	    Type: AWS::CodeBuild::Project
644	    Properties:
645	      Name: !Ref BuildProjectName
646	      Description: A description about my project
647	      ServiceRole: !Ref CodePipelineServiceRole
648	      Artifacts:
649	        Location: !ImportValue
650	            Fn::Sub: ${BucketsStackName}-CICDArtifactsBucket
651	        Type: S3
652	      Environment:
653	        Type: LINUX_CONTAINER
654	        ComputeType: BUILD_GENERAL1_SMALL
655	        Image: aws/codebuild/java:openjdk-8
656	        EnvironmentVariables:
657	        - Name: varName
658	          Value: varValue
659	      Source:
660	        Location: "https://git-codecommit.us-west-2.amazonaws.com/v1/repos/HMSA-Codecommit-Repositor"
661	        Type: CODECOMMIT
662	      TimeoutInMinutes: 10
663	      Tags:
664	        - Key: Key1
665	          Value: Value1
666	        - Key: Key2
667	          Value: Value2
668	  codedeploy:
669	      Type: "AWS::CodeDeploy::Application"
670	      Properties:
671	          ApplicationName: !Ref CodeDeployApplication
672	          ComputePlatform: "Server"
673	  codedeploygroup:
674	      Type: "AWS::CodeDeploy::DeploymentGroup"
675	      Properties:
676	          DeploymentConfigName: "CodeDeployDefault.AllAtOnce"
677	          DeploymentStyle:
678	              DeploymentOption: WITHOUT_TRAFFIC_CONTROL
679	              DeploymentType: "IN_PLACE"
680	          Ec2TagSet:
681	              Ec2TagSetList:
682	                - Ec2TagGroup:
683	                  - Type: "KEY_AND_VALUE"
684	                    Key: "Name"
685	                    Value: "CICD-Application-Instance"
686	          ApplicationName: !Ref CodeDeployApplication
687	#          TriggerConfigurations: []
688	          ServiceRoleArn: !GetAtt CodePipelineServiceRole.Arn
689	          DeploymentGroupName: !Ref CodeDeployDeploymentGroup
690	  Codepipeline:
691	    Type: 'AWS::CodePipeline::Pipeline'
692	    Properties:
693	      ArtifactStore:
694	        Type: S3
695	        Location: !ImportValue
696	            Fn::Sub: ${BucketsStackName}-CICDArtifactsBucket
697	      Name: !Ref CodePipelineName
698	      RoleArn: !GetAtt CodePipelineServiceRole.Arn
699	      Stages:
700	        - Name: Source
701	          Actions:
702	            - Name: SourceAction
703	              ActionTypeId:
704	                Category: Source
705	                Owner: AWS
706	                Version: '1'
707	                Provider: CodeCommit
708	              OutputArtifacts:
709	                - Name: SourceOutput
710	              Configuration:
711	                BranchName: master
712	                PollForSourceChanges: true
713	                RepositoryName: !Ref CodeRepository
714	#                RepositoryName: !Ref CodeRepository
715	              RunOrder: 1
716	        - Name: "Build"
717	          Actions:
718	            - Name: Build
719	              ActionTypeId:
720	                Category: Build
721	                Owner: AWS
722	                Provider: CodeBuild
723	                Version: 1
724	              Configuration:
725	                ProjectName: !Ref BuildProject
726	              Region: us-west-2
727	              InputArtifacts:
728	                - Name: SourceOutput
729	              OutputArtifacts:
730	                - Name: Buildoutput
731	        - Name: Deploy
732	          Actions:
733	            - Name: DeployAction
734	              InputArtifacts:
735	                - Name: Buildoutput
736	              ActionTypeId:
737	                Category: Deploy
738	                Owner: AWS
739	                Version: 1
740	                Provider: CodeDeploy
741	              Configuration:
742	                ApplicationName: !Ref codedeploy
743	                DeploymentGroupName: !Ref codedeploygroup
744	              RunOrder: 1
745	  AmazonCloudWatchEventRole:
746	    Type: 'AWS::IAM::Role'
747	    Properties:
748	      AssumeRolePolicyDocument:
749	        Version: 2012-10-17
750	        Statement:
751	          - Effect: Allow
752	            Principal:
753	              Service:
754	                - events.amazonaws.com
755	            Action: 'sts:AssumeRole'
756	      Path: /
757	      Policies:
758	        - PolicyName: cwe-pipeline-execution
759	          PolicyDocument:
760	            Version: 2012-10-17
761	            Statement:
762	              - Effect: Allow
763	                Action: 'codepipeline:StartPipelineExecution'
764	                Resource:
765	                  - !Join
766	                    - ''
767	                    - - 'arn:aws:codepipeline:'
768	                      - !Ref 'AWS::Region'
769	                      - ':'
770	                      - !Ref 'AWS::AccountId'
771	                      - ':'
772	                      - !Ref Codepipeline
773	  AmazonCloudWatchEventRuleResourceCp:
774	    Type: 'AWS::Events::Rule'
775	    Properties:
776	      EventPattern:
777	        source:
778	          - aws.codecommit
779	        detail-type:
780	          - CodeCommit Repository State Change
781	        resources:
782	          - !Join
783	            - ''
784	            - - 'arn:aws:codecommit:'
785	              - !Ref 'AWS::Region'
786	              - ':'
787	              - !Ref 'AWS::AccountId'
788	              - ':'
789	              - !GetAtt
790	                - CodeRepository
791	                - Name
792	        detail:
793	          event:
794	            - referenceCreated
795	            - referenceUpdated
796	          referenceType:
797	            - branch
798	          referenceName:
799	            - master
800	      Targets:
801	        - Arn: !Join
802	            - ''
803	            - - 'arn:aws:codepipeline:'
804	              - !Ref 'AWS::Region'
805	              - ':'
806	              - !Ref 'AWS::AccountId'
807	              - ':'
808	              - !Ref Codepipeline
809	          RoleArn: !GetAtt
810	            - AmazonCloudWatchEventRole
811	            - Arn
812	          Id: codepipeline-Codepipeline
813	Outputs:
814	  CodeRepository:
815	    Description: The Code Repository
816	    Value: !Ref CodeRepository
817	    Export:
818	      Name: !Sub ${AWS::StackName}-CodeRepository
819	  BuildProject:
820	    Description: The Build Project
821	    Value: !Ref BuildProject
822	    Export:
823	      Name: !Sub ${AWS::StackName}-BuildProject
824	  codedeploy:
825	    Description: The code deploy
826	    Value: !Ref codedeploy
827	    Export:
828	      Name: !Sub ${AWS::StackName}-codedeploy
829	  codedeploygroup:
830	    Description: The code deploy group
831	    Value: !Ref codedeploygroup
832	    Export:
833	      Name: !Sub ${AWS::StackName}-codedeploygroup
834	  Codepipeline:
835	    Description: The Code pipeline
836	    Value: !Ref Codepipeline
837	    Export:
838	      Name: !Sub ${AWS::StackName}-Codepipeline
839	  WebServerInstance:
840	    Description: The WebServer Instance
841	    Value: !Ref WebServerInstance
842	    Export:
843	      Name: !Sub ${AWS::StackName}-WebServerInstance
