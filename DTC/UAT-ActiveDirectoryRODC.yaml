AWSTemplateFormatVersion: 2010-09-09
Description: Utility-ActiveDirectory Template.
  This creates a Active Directory Read Only Domain Controller to a VPC. For adding members to the domain, ensure that they are
  launched into the ActiveDirectory-DomainMemberSecurityGroup created by this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - VPCStackName
          - AMIFunctionsStackName
          - BucketsStackName
          - TopicsStackName
          - CodesStackName
          - BaselineStackName
      - Label:
          default: Resource Dependencies
        Parameters:
          - KeyName
      - Label:
          default: System Configuration
        Parameters:
          - CompanyName
          - SystemName
      - Label:
          default: Environment Configuration
        Parameters:
          - AccountName
          - EnvironmentName
          - EnvironmentType
          - OSName
          - OSDate
      - Label:
          default: Directory Utility Configuration
        Parameters:
          - DirectoryUtilityName
          - DirectoryAdministratorPassword
          - DirectorySafeModePassword
          - DirectorySeedDataEncryptionKey
          - LogRetention
      - Label:
          default: Security Configuration
        Parameters:
          - AdministratorNetworks
          - AdministratorNetworkDescriptions
    ParameterLabels:
      VPCStackName:
        default: VPC Stack Name
      AMIFunctionsStackName:
        default: AMIFunctions Stack Name
      BucketsStackName:
        default: Buckets Stack Name
      TopicsStackName:
        default: Topics Stack Name
      CodesStackName:
        default: Codes Stack Name
      BaselineStackName:
        default: Baseline Stack Name
      KeyName:
        default: Key Name
      CompanyName:
        default: Company Name
      SystemName:
        default: System Name
      AccountName:
        default: Account Name
      EnvironmentName:
        default: Environment Name
      EnvironmentType:
        default: Environment Type
      OSName:
        default: Operating System Name
      OSDate:
        default: Operating System Date
      DirectoryUtilityName:
        default: Directory Utility Name
      DirectoryAdministratorPassword:
        default: Directory Administrator Password
      DirectorySafeModePassword:
        default: Directory Safe Mode Password
      DirectorySeedDataEncryptionKey:
        default: Directory Seed Data Encryption Key
      LogRetention:
        default: Log Retention
      AdministratorNetworks:
        default: Administrator Networks
      AdministratorNetworkDescriptions:
        default: Administrator Network Descriptions
Parameters:
  VPCStackName:
    Description: Name of the CloudFormation Stack containing the VPC
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Production-VPC
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  AMIFunctionsStackName:
    Description: Name of the CloudFormation Stack containing the AMI Functions
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: AMIFunctions
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  BucketsStackName:
    Description: Name of the CloudFormation Stack containing Buckets
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Buckets
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  TopicsStackName:
    Description: Name of the CloudFormation Stack containing Topics
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Topics
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  CodesStackName:
    Description: Name of the CloudFormation Stack containing the Codes Resources
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Codes
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  BaselineStackName:
    Description: Name of the CloudFormation Stack containing the Baseline Resources
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Baseline
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  KeyName:
    Description: Name of an existing KeyPair to enable the Administrator Password
    Type: AWS::EC2::KeyPair::KeyName
    MaxLength: 32
    Default: administrator
    AllowedPattern: (^$|^[_a-zA-Z0-9]*$)
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  CompanyName:
    Description: Name of the Company associated with the Stack
    Type: String
    MinLength: 2
    MaxLength: 32
    Default: DXC
    AllowedPattern: ^[A-Z][a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters.
  SystemName:
    Description: Name of the System associated with the Stack
    Type: String
    MinLength: 2
    MaxLength: 32
    Default: Prototype
    AllowedPattern: ^[A-Z][a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters.
  AccountName:
    Description: Name of the Account associated with the Stack
    Type: String
    Default: Production
    AllowedValues:
      - Production
      - Staging
      - UAT
      - QA
      - Testing
      - Development
      - Build
      - Core
      - Recovery
      - Log
      - Management
      - Jumpstart
      - Organization
    ConstraintDescription: must be Production, Staging, UAT, QA, Testing, Development, Build, Core, Recovery, Log, Management, Jumpstart or Organization.
  EnvironmentName:
    Description: Name of the Environment associated with the Stack
    Type: String
    Default: Production
    AllowedValues:
      - Production
      - Staging
      - UAT
      - QA
      - Testing
      - Development
      - Build
      - Core
      - Recovery
      - Log
      - Identity
      - Management
      - Organization
    ConstraintDescription: must be Production, Staging, UAT, QA, Testing, Development, Build, Core, Recovery, Log, Identity, Management or Organization.
  EnvironmentType:
    Description: Type of the Environment to build. Used to select size-related options in Mappings
    Type: String
    Default: small
    AllowedValues:
      - small
      - medium
      - large
      - xlarge
    ConstraintDescription: must be small, medium, large or xlarge.
  OSName:
    Description: The Operating System to use for Instances
    Type: String
    Default: Windows Server 2012 R2
    AllowedValues:
      - Windows Server 2019
      - Windows Server 2012 R2
      - Windows Server 2016
    ConstraintDescription: must be "Windows Server 2012 R2" or "Windows Server 2016".
  OSDate:
    Description: Optional Operating System Date, specify to select a specific publication date for the Image
    Type: String
    Default: '20200415'
    AllowedPattern: (^$|^20(1[7-9]|[2-9][0-9])(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$)
    ConstraintDescription: Must be a valid date in YYYYMMDD format.
  DirectoryUtilityName:
    Description: Name of the Directory Utility
    Type: String
    MinLength: 2
    MaxLength: 32
    Default: ActiveDirectoryRODC
  ActiveDirectoryPDCDomainName:
    Description: Name of the PDC Domain Name
    Type: String
    Default: "ad.m.dxc-ap.com"
  DirectoryAdministratorPassword:
    Description: Optional password for the Directory Administrator User (If unspecified, generate a random password)
    Type: String
    NoEcho: true
    Default: ''
    AllowedPattern: (^$|(?=^.{20,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])^.*$)
    ConstraintDescription: must be 20 to 32 character random string format with at least one uppercase, lowercase and digit, if specified.
  DirectorySafeModePassword:
    Description: Optional password allowing recovery when the domain controller is restarted in Safe Mode (If unspecified, generate a random password)
    Type: String
    NoEcho: true
    Default: ''
    AllowedPattern: (^$|(?=^.{20,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])^.*$)
    ConstraintDescription: must be 20 to 32 character random string format with at least one uppercase, lowercase and digit, if specified.
  DirectorySeedDataEncryptionKey:
    Description: Encryption Key used to encrypt sensitive Directory Seed Data used to populate the Directory, mainly User initial passwords
    Type: String
    NoEcho: true
    AllowedPattern: (?=^.{12,24}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])^.*$
    ConstraintDescription: must be 12 to 24 character random string format with at least one uppercase, lowercase and digit.
  LogRetention:
    Description: Number of days to retain CloudWatch Log Events
    Type: Number
    Default: 14
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
    ConstraintDescription: must be 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827 or 3653.
  AdministratorNetworks:
    Description: Networks that can administer the Application
    Type: String
    Default: -,-,-,-
    ConstraintDescription: must be a comma-separated list of 4 values, each an IP CIDR range of the form x.x.x.x/x or '-'.
  AdministratorNetworkDescriptions:
    Description: Descriptions of networks that can administer the Application
    Type: String
    Default: -,-,-,-
    ConstraintDescription: must be a comma-separated list of 4 values, each a short text description or '-'.
Mappings:
  RegionNameMap:
    us-east-1:
      Name: Virginia
      Code: ue1
    us-east-2:
      Name: Ohio
      Code: ue2
    us-west-1:
      Name: California
      Code: uw1
    us-west-2:
      Name: Oregon
      Code: uw2
    ap-east-1:
      Name: HongKong
      Code: ae1
    ap-south-1:
      Name: Mumbai
      Code: ad1
    ap-northeast-2:
      Name: Seoul
      Code: an2
    ap-southeast-1:
      Name: Singapore
      Code: as1
    ap-southeast-2:
      Name: Sydney
      Code: as2
    ap-northeast-1:
      Name: Tokyo
      Code: an1
    ca-central-1:
      Name: Canada
      Code: cc1
    eu-central-1:
      Name: Frankfurt
      Code: ec1
    eu-west-1:
      Name: Ireland
      Code: ew1
    eu-west-2:
      Name: London
      Code: ew2
    eu-west-3:
      Name: Paris
      Code: ew3
    eu-north-1:
      Name: Stockholm
      Code: en1
    me-south-1:
      Name: Bahrain
      Code: ms1
    sa-east-1:
      Name: SaoPaulo
      Code: se1
  # Windows AMIs are only published for about 90 days, then they expire. Meaning, this template needs to be updated
  # every 3 months to add new AMIs, or it will no longer be able to create new stacks with specified OSDates.
  # Be very careful of deleting prior dates in the table below, even if they are no longer published, as whenever we
  # need to update an existing ActiveDirectory stack, we must continue to present the same AMI or CloudFormation will
  # attempt to replace the instance. So, in ANY Region where an ActiveDirectory stack is running, you must confirm what
  # AMIs are in use and insure they remain in this table to prevent an attempt to replace the Instance. Note the default
  # StackPolicy will stop this, but as this can be overridden, and the result could be catastrophic, best to make sure
  # this table is edited to remove AMI lines VERY, VERY carefully, once systems are in operation.
  ImageIdMap:
    AMI: # Descending date sort. Keep any Old AMI versions which may be in use, to prevent unexpected Instance updates.
      '20200415': Windows_Server-2012-R2_RTM-English-64Bit-Base-2020.04.15
      '20200212': Windows_Server-2019-English-Full-Base-2020.02.12
      '20191216': Windows_Server-2012-R2_RTM-English-64Bit-Base-2019.12.16
      '20191113': Windows_Server-2012-R2_RTM-English-64Bit-Base-2019.11.13
      '20191009': Windows_Server-2012-R2_RTM-English-64Bit-Base-2019.10.09
      '20190911': Windows_Server-2012-R2_RTM-English-64Bit-Base-2019.09.11
    us-east-1:
      '20191216': ami-01a2180a66e81fae2
      '20191009': ami-028be67c2aa2f1ce1
      '20190911': ami-05ad3e9ea4dcd9863
    us-east-2:
      '20191009': ami-09ee46c8d9abcb966
      '20190911': ami-06d29c77f7ab40cf2
    us-west-1:
      '20191009': ami-05cd4c9c42e255074
      '20190911': ami-05c71b3ca4af2fbee
    us-west-2:
      '20200415': ami-0de8bce894b0eadce
      '20200115': ami-07872c9dbb86b69ed
      '20191009': ami-095f164d8ca0bdbbf
      '20190911': ami-083ae6bd726521e4a
    ap-east-1:
      '20191009': ami-0966d14af125960f2
      '20190911': ami-0c76f133f3777d320
    ap-south-1:
      '20191009': ami-0c317e1f81c5fb88c
      '20190911': ami-0773dc0299ece2df6
    ap-northeast-2:
      '20191009': ami-0a0b21dd07f1083bf
      '20190911': ami-053df08898d96e587
    ap-southeast-1:
      '20191009': ami-0364b7df071ead294
      '20190911': ami-003bcb0466a4c1ee8
    ap-southeast-2:
      '20191009': ami-0b90712bab07bff79
      '20190911': ami-061e7ecf5eb3633e2
    ap-northeast-1:
      '20191009': ami-005ee2767c33f46f6
      '20190911': ami-0a7f0aeadc4d0fbfe
    ca-central-1:
      '20191009': ami-077aa0feeb9f0276a
      '20190911': ami-0c2b4ed63c22f1ea9
    eu-central-1:
      '20191009': ami-0987d7897f512004d
      '20190911': ami-09a023d2317d65420
    eu-west-1:
      '20191009': ami-0927c25b5177ff0de
      '20190911': ami-0c43411b5fd2c1129
    eu-west-2:
      '20191009': ami-0e90780577bc9d091
      '20190911': ami-010ae2c4ae830c4dd
    eu-west-3:
      '20191009': ami-0d0feff63441edc49
      '20190911': ami-05e9b803073bb06b8
    eu-north-1:
      '20191009': ami-0ae9f5980b0d12eda
      '20190911': ami-08f045fc3b43c4b16
    me-south-1:
      '20191009': ami-0ee9a2cef77c91144
      '20190911': ami-0fd110515ba1a3c70
    sa-east-1:
      '20191009': ami-03fb3b14747ca1fe6
      '20190911': ami-041a00620190a86f9
  InstanceTypeMap:
    DomainController:
      nano: t3.small
      small: t3.medium
      medium: t3.large
      large: m5.large
      xlarge: m5.xlarge
  VolumeSizeMap:
    DomainControllerRoot:
      nano: 24
      small: 32
      medium: 48
      large: 64
      xlarge: 96
    DomainControllerBackup:
      nano: 8
      small: 16
      medium: 32
      large: 48
      xlarge: 64
  VolumeTypeMap:
    DomainControllerRoot:
      nano: standard
      small: standard
      medium: gp2
      large: gp2
      xlarge: gp2
    DomainControllerBackup:
      nano: standard
      small: standard
      medium: standard
      large: standard
      xlarge: gp2
Conditions:
  ConfigureAccountEnvironment: !Or [ !Not [ !Equals [ !Ref AccountName, !Ref EnvironmentName ]], !Equals [ !Ref AccountName, Jumpstart ]]
  ConfigureGlobal: !Equals [ !Ref 'AWS::Region', us-east-1 ]
  GetImageID: !Equals [ !Ref OSDate, '' ]
  ConfigureAdministratorPassword: !Not [ !Equals [ !Ref DirectoryAdministratorPassword, '' ]]
  GenerateAdministratorPassword: !Not [ !Condition ConfigureAdministratorPassword ]
  ConfigureSafeModePassword: !Not [ !Equals [ !Ref DirectorySafeModePassword, '' ]]
  GenerateSafeModePassword: !Not [ !Condition ConfigureSafeModePassword ]
  ConfigureAdministratorNetwork0: !Not [ !Equals [ !Select [ 0, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork1: !Not [ !Equals [ !Select [ 1, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork2: !Not [ !Equals [ !Select [ 2, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork3: !Not [ !Equals [ !Select [ 3, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
      Policies:
        - PolicyName: GetPasswordSecretPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${EnvironmentName}-${DirectoryUtilityName}-Administrator-*
                  - !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${EnvironmentName}-${DirectoryUtilityName}-SafeMode-*
                  - !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${EnvironmentName}-${DirectoryUtilityName}-Encryption-*
                  - !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:Management-ActiveDirectoryPDC-Administrator-*
        - PolicyName: DownloadScriptFromS3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub
                    - arn:aws:s3:::${ScriptsBucket}/Modules/*
                    - ScriptsBucket: !ImportValue
                        Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  - !Sub
                    - arn:aws:s3:::${ScriptsBucket}/Windows/*
                    - ScriptsBucket: !ImportValue
                        Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  - !Sub
                    - arn:aws:s3:::${ScriptsBucket}/ActiveDirectory/*
                    - ScriptsBucket: !ImportValue
                        Fn::Sub: ${BucketsStackName}-ScriptsBucket
        - PolicyName: DownloadConfigurationFromS3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub
                    - arn:aws:s3:::${ConfigurationsBucket}/Windows/*
                    - ConfigurationsBucket: !ImportValue
                        Fn::Sub: ${BucketsStackName}-ConfigurationsBucket
                  - !Sub
                    - arn:aws:s3:::${ConfigurationsBucket}/ActiveDirectory/*
                    - ConfigurationsBucket: !ImportValue
                        Fn::Sub: ${BucketsStackName}-ConfigurationsBucket
        - PolicyName: BackupInS3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub
                    - arn:aws:s3:::${BackupsBucket}/ActiveDirectory
                    - BackupsBucket: !ImportValue
                        Fn::Sub: ${BucketsStackName}-BackupsBucket
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                Resource:
                  - !Sub
                    - arn:aws:s3:::${BackupsBucket}/ActiveDirectory/*
                    - BackupsBucket: !ImportValue
                        Fn::Sub: ${BucketsStackName}-BackupsBucket
        - PolicyName: ConfigureSubnetsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeSubnets
                Resource: '*'
  LogGroupName:
    Type: Custom::LogGroupName
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${CodesStackName}-LogGroupNameFunctionArn
      CompanyName: !Ref CompanyName
      SystemName: !Ref SystemName
      ApplicationName: !Ref DirectoryUtilityName
      EnvironmentName: !If [ ConfigureAccountEnvironment, !Ref EnvironmentName, !Ref 'AWS::NoValue' ]
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref LogGroupName
      RetentionInDays: !Ref LogRetention
  # AdministratorSecret:
  #   Type: AWS::SecretsManager::Secret
  #   Properties:
  #     Name: !Sub ${EnvironmentName}-${DirectoryUtilityName}-Administrator
  #     Description: !Sub Username and Password for the ${EnvironmentName} Environment ${DirectoryUtilityName} Administrator
  #     SecretString: !If [ ConfigureAdministratorPassword, !Sub '{"username": "dxcaxusad", "password": "${DirectoryAdministratorPassword}"}', !Ref 'AWS::NoValue' ]
  #     GenerateSecretString: !If
  #       - GenerateAdministratorPassword
  #       - SecretStringTemplate: !Sub '{"username": "dxcaxusad"}'
  #         GenerateStringKey: password
  #         PasswordLength: 32
  #         ExcludePunctuation: true
  #       - !Ref AWS::NoValue
  #     Tags:
  #       - Key: Name
  #         Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-Administrator
  SafeModeSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${EnvironmentName}-${DirectoryUtilityName}-SafeMode
      Description: !Sub Username and Password for the ${EnvironmentName} Environment ${DirectoryUtilityName} Utility Safe Mode Administrator
      SecretString: !If [ ConfigureSafeModePassword, !Sub '{"username": "SafeMode", "password": "${DirectorySafeModePassword}"}', !Ref 'AWS::NoValue' ]
      GenerateSecretString: !If
        - GenerateSafeModePassword
        - SecretStringTemplate: !Sub '{"username": "SafeMode"}'
          GenerateStringKey: password
          PasswordLength: 32
          ExcludePunctuation: true
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-SafeMode
  EncryptionSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${EnvironmentName}-${DirectoryUtilityName}-Encryption
      Description: !Sub Key used to encrypt Seed Data for the ${EnvironmentName} Environment ${DirectoryUtilityName} Utility
      SecretString: !Sub '{"purpose": "SeedData", "key": "${DirectorySeedDataEncryptionKey}"}'
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-Encryption
  DomainMemberSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvironmentName}-${DirectoryUtilityName}-DomainMemberSecurityGroup
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-DomainMemberSecurityGroup
  AuthenticatorSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvironmentName}-${DirectoryUtilityName}-AuthenticatorSecurityGroup
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-AuthenticatorSecurityGroup
  AdministratorSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvironmentName}-${DirectoryUtilityName}-AdministratorSecurityGroup
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-AdministratorSecurityGroup
  DomainControllerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvironmentName}-${DirectoryUtilityName}-DomainControllerSecurityGroup
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (HTTP)
        - IpProtocol: tcp
          FromPort: 88
          ToPort: 88
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (Kerberos)
        - IpProtocol: udp
          FromPort: 88
          ToPort: 88
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (Kerberos)
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (NTP)
        - IpProtocol: tcp
          FromPort: 135
          ToPort: 135
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (RPC EPM)
        - IpProtocol: udp
          FromPort: 138
          ToPort: 138
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (NetBIOS Datagram)
        - IpProtocol: tcp
          FromPort: 389
          ToPort: 389
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (LDAP)
        - IpProtocol: udp
          FromPort: 389
          ToPort: 389
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (LDAP)
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (HTTPS)
        - IpProtocol: tcp
          FromPort: 445
          ToPort: 445
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (SMB)
        - IpProtocol: udp
          FromPort: 445
          ToPort: 445
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (SMB)
        - IpProtocol: udp
          FromPort: 464
          ToPort: 464
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (Kerberos Password)
        - IpProtocol: tcp
          FromPort: 464
          ToPort: 464
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (Kerberos Password)
        - IpProtocol: tcp
          FromPort: 636
          ToPort: 636
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (LDAPS)
        - IpProtocol: tcp
          FromPort: 3268
          ToPort: 3268
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (LDAP Global Catalog)
        - IpProtocol: tcp
          FromPort: 3269
          ToPort: 3269
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (LDAPS Global Catalog)
        - IpProtocol: tcp
          FromPort: 9389
          ToPort: 9389
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (ADWS)
        - IpProtocol: tcp
          FromPort: 49152
          ToPort: 65535
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (Ephemeral)
        - IpProtocol: udp
          FromPort: 49152
          ToPort: 65535
          CidrIp: 10.160.255.116/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-A-SecurityGroup (Ephemeral)
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (HTTP)
        - IpProtocol: tcp
          FromPort: 88
          ToPort: 88
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (Kerberos)
        - IpProtocol: udp
          FromPort: 88
          ToPort: 88
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (Kerberos)
        - IpProtocol: udp
          FromPort: 123
          ToPort: 123
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (NTP)
        - IpProtocol: tcp
          FromPort: 135
          ToPort: 135
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (RPC EPM)
        - IpProtocol: udp
          FromPort: 138
          ToPort: 138
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (NetBIOS Datagram)
        - IpProtocol: tcp
          FromPort: 389
          ToPort: 389
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (LDAP)
        - IpProtocol: udp
          FromPort: 389
          ToPort: 389
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (LDAP)
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (HTTPS)
        - IpProtocol: tcp
          FromPort: 445
          ToPort: 445
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (SMB)
        - IpProtocol: udp
          FromPort: 445
          ToPort: 445
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (SMB)
        - IpProtocol: udp
          FromPort: 464
          ToPort: 464
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (Kerberos Password)
        - IpProtocol: tcp
          FromPort: 464
          ToPort: 464
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (Kerberos Password)
        - IpProtocol: tcp
          FromPort: 636
          ToPort: 636
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (LDAPS)
        - IpProtocol: tcp
          FromPort: 3268
          ToPort: 3268
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (LDAP Global Catalog)
        - IpProtocol: tcp
          FromPort: 3269
          ToPort: 3269
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (LDAPS Global Catalog)
        - IpProtocol: tcp
          FromPort: 9389
          ToPort: 9389
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (ADWS)
        - IpProtocol: tcp
          FromPort: 49152
          ToPort: 65535
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (Ephemeral)
        - IpProtocol: udp
          FromPort: 49152
          ToPort: 65535
          CidrIp: 10.160.255.244/32
          Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-PDC-B-SecurityGroup (Ephemeral)
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
          Description: Global (ICMP All)
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
          Description: Global (DNS)
        - IpProtocol: udp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
          Description: Global (DNS)
  WindowsImage:
    Type: Custom::WindowsImage
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${AMIFunctionsStackName}-WindowsImageFunctionArn
      OSName: !Ref OSName
      OSDate: !Ref OSDate
    Condition: GetImageID
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref Role
  HostNameA:
    Type: Custom::HostName
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${CodesStackName}-HostNameFunctionArn
      CompanyName: !Ref CompanyName
      LocationName: !Ref AWS::Region
      EnvironmentName: !Ref EnvironmentName
      ApplicationName: !Ref DirectoryUtilityName
      ComponentName: DomainController
      InstanceNumber: 01
      ZoneCode: a
  PrivateIpAddressA:
    Type: Custom::PrivateIpAddress
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${BaselineStackName}-PrivateIpAddressFunctionArn
      SubnetId: !ImportValue
        Fn::Sub: ${VPCStackName}-IdentitySubnetA
      Offset: 4
  DomainControllerA:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Credentials:
          type: S3
          roleName: !Ref Role
          buckets:
            - !ImportValue
              Fn::Sub: ${BucketsStackName}-ScriptsBucket
            - !ImportValue
              Fn::Sub: ${BucketsStackName}-ConfigurationsBucket
      AWS::CloudFormation::Init:
        configSets:
          All:
            - InstallCloudFormationModule
            - RegisterCloudFormationSignal
            - ConfigureOS
            - ConfigureCFN
            - InstallSSMAgent
            - InstallCloudWatchAgent
            - ConfigureCloudWatchAgent
            - ConfigureStaticPrivateAddress
            - ConfigureHostName
            - JoinDomain
            - InstallADDS
            - InstallADDSDomainController
            # - InstallADCS
            - UpdateDNSServers
            - ConfigurePowerShellProfile
            - ConfigureWindowsTaskBar
            - InstallWindowsBackup
            - ConfigureWindowsBackup
            - SignalCloudFormation
        InstallCloudFormationModule:
          files:
            C:\Windows\system32\WindowsPowerShell\v1.0\Modules\CloudFormation\CloudFormation.psm1:
              source: !Sub
                - https://${ScriptsBucket}.${s3}.amazonaws.com/Modules/CloudFormation.psm1
                - ScriptsBucket: !ImportValue
                    Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  s3: !If [ ConfigureGlobal, s3, !Sub 's3-${AWS::Region}' ]
              authentication: S3Credentials
        RegisterCloudFormationSignal:
          commands:
            01-register-signal:
              command: !Sub 'powershell.exe -Command "Register-CloudFormationSignal
                -Stack ''${AWS::StackName}''
                -Resource ''DomainControllerA''
                -Region ''${AWS::Region}''"'
              waitAfterCompletion: 0
        ConfigureOS:
          commands:
            01-disable-windows-firewall:
              command: powershell.exe -Command "Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False"
              waitAfterCompletion: 0
            02-set-execution-policy:
              command: powershell.exe -Command "Set-ExecutionPolicy RemoteSigned -Force"
              waitAfterCompletion: 0
        ConfigureCFN:
          files:
            C:\cfn\cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
            C:\cfn\hooks.d\cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.DomainControllerA.Metadata.AWS::CloudFormation::Init
                action=cfn-init.exe --verbose --configsets All --stack ${AWS::StackId} --resource DomainControllerA --region ${AWS::Region}
          services:
            windows:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - C:\cfn\cfn-hup.conf
                  - C:\cfn\hooks.d\cfn-auto-reloader.conf
        InstallSSMAgent:
          files:
            C:\cfn\temp\AmazonSSMAgentSetup.exe:
              source: https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/windows_amd64/AmazonSSMAgentSetup.exe
          commands:
            01-install-ssm-agent:
              command: C:\cfn\temp\AmazonSSMAgentSetup.exe /install /passive /quiet
              ignoreErrors: false
        InstallCloudWatchAgent:
          sources:
            C:\cfn\temp\AmazonCloudWatchAgent: https://s3.amazonaws.com/amazoncloudwatch-agent/windows/amd64/latest/AmazonCloudWatchAgent.zip
          commands:
            01-install-cloudwatch-agent:
              command: powershell.exe -Command ".\install.ps1"
              cwd: C:\cfn\temp\AmazonCloudWatchAgent
              ignoreErrors: false
        ConfigureCloudWatchAgent:
          files:
            C:\ProgramData\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.json:
              content: !Sub |
                {
                  "agent" : {
                    "metrics_collection_interval" : 60,
                    "logfile" : "C:\\Program Files\\Amazon\\CloudWatchAgent\\Logs\\amazon-cloudwatch-agent.log",
                    "debug" : false
                  },
                  "metrics" : {
                    "namespace" : "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}",
                    "metrics_collected" : {
                      "Memory" : {
                        "measurement" : [
                          { "name" : "% Committed Bytes In Use", "rename" : "MemoryCommittedPercent", "unit" : "Percent" },
                          { "name" : "Pages/sec", "rename" : "MemoryPageOps", "unit" : "Count/Second" }
                        ]
                      },
                      "LogicalDisk" : {
                        "resources" : [
                          "C:",
                          "D:"
                        ],
                        "measurement" : [
                          { "name" : "% Free Space", "rename" : "DiskFreePercent", "unit" : "Percent" },
                          { "name" : "Free Megabytes", "rename" : "DiskFreeMegabytes", "unit" : "Megabytes" },
                          { "name" : "Disk Bytes/sec", "rename" : "DiskBytesPerSecond", "unit" : "Bytes/Second" },
                          { "name" : "Avg. Disk Queue Length", "rename" : "DiskQueueLength", "unit" : "Count" }
                        ]
                      }
                    },
                    "append_dimensions" : {
                      "InstanceId" : "${!aws:InstanceId}",
                      "AutoScalingGroupName" : "${!aws:AutoScalingGroupName}"
                    },
                    "aggregation_dimensions" : [
                      [ "InstanceId" ],
                      [ "AutoScalingGroupName" ],
                      []
                    ]
                  },
                  "logs" : {
                    "logs_collected" : {
                      "windows_events" : {
                        "collect_list" : [
                          {
                            "event_name" : "Application",
                            "event_levels" : [ "ERROR", "WARNING", "INFORMATION" ],
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/ApplicationEventLog",
                            "event_format" : "text"
                          },
                          {
                            "event_name" : "System",
                            "event_levels" : [ "ERROR", "WARNING", "INFORMATION" ],
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/SystemEventLog",
                            "event_format" : "text"
                          },
                          {
                            "event_name" : "Security",
                            "event_levels" : [ "ERROR", "WARNING", "INFORMATION" ],
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/SecurityEventLog",
                            "event_format" : "text"
                          }
                        ]
                      },
                      "files" : {
                        "collect_list" : [
                          {
                            "file_path" : "C:\\Program Files\\Amazon\\CloudWatchAgent\\Logs\\amazon-cloudwatch-agent.log",
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/amazon-cloudwatch-agent.log",
                            "timezone" : "UTC"
                          },
                          {
                            "file_path" : "C:\\Program Files\\Amazon\\Ec2ConfigService\\Logs\\EC2ConfigLog.txt",
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/EC2ConfigLog.txt",
                            "timezone" : "UTC"
                          },
                          {
                            "file_path" : "C:\\cfn\\log\\cfn-init.log",
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/cfn-init.log",
                            "timestamp_format" : "%Y-%m-%d %H:%M:%S",
                            "timezone" : "Local"
                          },
                          {
                            "file_path" : "C:\\cfn\\log\\cfn-init-cmd.log",
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/cfn-init-cmd.log",
                            "timestamp_format" : "%Y-%m-%d %H:%M:%S",
                            "timezone" : "Local"
                          },
                          {
                            "file_path" : "C:\\cfn\\log\\cfn-hup.log",
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/cfn-hup.log",
                            "timestamp_format" : "%Y-%m-%d %H:%M:%S",
                            "timezone" : "Local"
                          },
                          {
                            "file_path" : "C:\\inetpub\\logs\\LogFiles\\W3SVC1\\*.log",
                            "log_group_name" : "${LogGroup}",
                            "log_stream_name" : "DomainControllerA/{instance_id}/IISLogs",
                            "timezone" : "UTC"
                          }
                        ]
                      }
                    }
                  }
                }
          commands:
            01-start-cloudwatch-agent:
              command: powershell.exe -Command ".\amazon-cloudwatch-agent-ctl.ps1 -a fetch-config -m ec2 -c file:C:\ProgramData\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.json -s"
              cwd: C:\Program Files\Amazon\AmazonCloudWatchAgent
              ignoreErrors: false
          services:
            windows:
              AmazonCloudWatchAgent:
                enabled: true
                ensureRunning: true
                files:
                  - C:\ProgramData\Amazon\AmazonCloudWatchAgent\amazon-cloudwatch-agent.json
        ConfigureStaticPrivateAddress:
          files:
            C:\cfn\scripts\Configure-StaticPrivateAddress.ps1:
              source: !Sub
                - https://${ScriptsBucket}.${s3}.amazonaws.com/ActiveDirectoryRODC/Configure-StaticPrivateAddress.ps1
                - ScriptsBucket: !ImportValue
                    Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  s3: !If [ ConfigureGlobal, s3, !Sub 's3-${AWS::Region}' ]
              authentication: S3Credentials
          commands:
            01-configure-static-address:
              command: powershell.exe -Command "C:\cfn\scripts\Configure-StaticPrivateAddress.ps1"
              waitAfterCompletion: 45
        ConfigureHostName:
          commands:
            01-configure-hostname:
              command: !Sub powershell.exe -Command "Rename-Computer -NewName ${HostNameA} -Restart"
              waitAfterCompletion: forever
        JoinDomain:
          files:
            C:\cfn\scripts\Join-Domain.ps1:
              source: !Sub
                - https://${ScriptsBucket}.${s3}.amazonaws.com/ActiveDirectoryRODC/Join-Domain.ps1
                - ScriptsBucket: !ImportValue
                    Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  s3: !If [ ConfigureGlobal, s3, !Sub 's3-${AWS::Region}' ]
              authentication: S3Credentials
          commands:
            01-join-domain:
              command: !Sub
                - powershell.exe -Command "C:\cfn\scripts\Join-Domain.ps1
                  -DomainName ${VPCDirectoryDomain}
                  -SecretId Management-ActiveDirectoryPDC-Administrator"
                - VPCDirectoryDomain: !Ref ActiveDirectoryPDCDomainName
              ignoreErrors: false
              waitAfterCompletion: forever
        InstallADDS:
          commands:
            01-install-ad-domain-services:
              command: powershell.exe -Command "Install-WindowsFeature AD-Domain-Services, rsat-adds -IncludeAllSubFeature"
              waitAfterCompletion: 0
        InstallADDSDomainController:
          files:
            C:\cfn\scripts\Install-ADDSDomainController.ps1:
              source: !Sub
                - https://${ScriptsBucket}.${s3}.amazonaws.com/ActiveDirectoryRODC/Install-ADDSDomainController.ps1
                - ScriptsBucket: !ImportValue
                    Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  s3: !If [ ConfigureGlobal, s3, !Sub 's3-${AWS::Region}' ]
              authentication: S3Credentials
          commands:
            01-install-addsdomaincontroller:
              command: !Sub
                - powershell.exe -Command "C:\cfn\scripts\Install-ADDSDomainController.ps1
                  -DomainName ${VPCDirectoryDomain}
                  -SecretId Management-ActiveDirectoryPDC-Administrator
                  -SafeModeSecretId ${EnvironmentName}-${DirectoryUtilityName}-SafeMode"
                - VPCDirectoryDomain: !Ref ActiveDirectoryPDCDomainName
              ignoreErrors: false
              waitAfterCompletion: forever
        UpdateDNSServers:
          files:
            C:\cfn\scripts\Update-DNSServers.ps1:
              source: !Sub
                - https://${ScriptsBucket}.${s3}.amazonaws.com/ActiveDirectoryRODC/Update-DNSServers.ps1
                - ScriptsBucket: !ImportValue
                    Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  s3: !If [ ConfigureGlobal, s3, !Sub 's3-${AWS::Region}' ]
              authentication: S3Credentials
          commands:
            01-update-dnsservers:
              command: !Sub
                - powershell.exe -Command "C:\cfn\scripts\Update-DNSServers.ps1
                  -DomainControllerAHostName ${HostNameA}
                  -DomainControllerAPrivateIp ${PrivateIpAddressA}
                  -DomainName ${VPCDirectoryDomain}
                  -SecretId Management-ActiveDirectoryPDC-Administrator"
                - VPCDirectoryDomain: !Ref ActiveDirectoryPDCDomainName
              waitAfterCompletion: 0
        ConfigurePowerShellProfile:
          files:
            C:\cfn\scripts\Configure-UserPowerShellProfile.ps1:
              source: !Sub
                - https://${ScriptsBucket}.${s3}.amazonaws.com/Windows/Configure-UserPowerShellProfile.ps1
                - ScriptsBucket: !ImportValue
                    Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  s3: !If [ ConfigureGlobal, s3, !Sub 's3-${AWS::Region}' ]
              authentication: S3Credentials
          commands:
            01-configure-userpowershellprofile:
              command: !Sub powershell.exe -Command "C:\cfn\scripts\Configure-UserPowerShellProfile.ps1 -UserName Admin'"
              waitAfterCompletion: 0
        ConfigureWindowsTaskBar:
          files:
            C:\cfn\scripts\Configure-WindowsTaskBar.ps1:
              source: !Sub
                - https://${ScriptsBucket}.${s3}.amazonaws.com/Windows/Configure-WindowsTaskBar.ps1
                - ScriptsBucket: !ImportValue
                    Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  s3: !If [ ConfigureGlobal, s3, !Sub 's3-${AWS::Region}' ]
              authentication: S3Credentials
          commands:
            01-configure-windowstaskbar:
              command: powershell.exe -Command "C:\cfn\scripts\Configure-WindowsTaskBar.ps1"
              waitAfterCompletion: 0
        InstallWindowsBackup:
          commands:
            01-install-windows-backup:
              command: powershell.exe -Command "Install-WindowsFeature -Name Windows-Server-Backup -IncludeAllSubfeature -IncludeManagementTools"
              waitAfterCompletion: 0
        ConfigureWindowsBackup:
          files:
            C:\cfn\scripts\Configure-WindowsBackup.ps1:
              source: !Sub
                - https://${ScriptsBucket}.${s3}.amazonaws.com/ActiveDirectory/Configure-WindowsBackup.ps1
                - ScriptsBucket: !ImportValue
                    Fn::Sub: ${BucketsStackName}-ScriptsBucket
                  s3: !If [ ConfigureGlobal, s3, !Sub 's3-${AWS::Region}' ]
              authentication: S3Credentials
          commands:
            01-configure-windowsbackup:
              command: powershell.exe -Command "C:\cfn\scripts\Configure-WindowsBackup.ps1"
              waitAfterCompletion: 0
        SignalCloudFormation:
          commands:
            01-signal-success:
              command: powershell.exe -Command "Send-CloudFormationSuccess"
    Properties:
      ImageId: !If [ GetImageID, !Ref WindowsImage, !FindInMap [ ImageIdMap, !Ref 'AWS::Region', !Ref OSDate ]]
      InstanceType: !FindInMap [ InstanceTypeMap, DomainController, !Ref EnvironmentType ]
      IamInstanceProfile: !Ref InstanceProfile
      KeyName: !Ref KeyName
      Monitoring: true
      NetworkInterfaces:
        - Description: !Sub ${EnvironmentName}-${DirectoryUtilityName}-NetworkInterface-eth0
          DeviceIndex: 0
          SubnetId: !ImportValue
            Fn::Sub: ${VPCStackName}-IdentitySubnetA
          PrivateIpAddress: !Ref PrivateIpAddressA
          GroupSet:
            - !Ref DomainControllerSecurityGroup
          DeleteOnTermination: true
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !FindInMap [ VolumeSizeMap, DomainControllerRoot, !Ref EnvironmentType ]
            VolumeType: !FindInMap [ VolumeTypeMap, DomainControllerRoot, !Ref EnvironmentType ]
        - DeviceName: /dev/xvdb
          Ebs:
            VolumeSize: !FindInMap [ VolumeSizeMap, DomainControllerBackup, !Ref EnvironmentType ]
            VolumeType: !FindInMap [ VolumeTypeMap, DomainControllerBackup, !Ref EnvironmentType ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-DomainControllerA
#        - Key: HostName
#          Value: !Ref HostNameA
      UserData:
        Fn::Base64: !Sub |
          <script>
          cfn-init.exe --verbose --configsets All --stack ${AWS::StackId} --resource DomainControllerA --region ${AWS::Region}
          </script>
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
  # Do not use the HostName Tag on any Instances along with explicitly defined HostNameRecordSets as you see here
  # If a HostName tag exists, the PrivateRecordSet Function will attempt to manage Private DNS Records, resulting in a conflict
  DomainControllerAPrivateHostNameRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateHostedZone
      Comment: !Sub Private DNS Host Name of the ${DirectoryUtilityName} DomainControllerA
      Name: !Sub
        - ${HostNameA}.${VPCPrivateDomain}.
        - VPCPrivateDomain: !ImportValue
            Fn::Sub: ${VPCStackName}-VPCPrivateDomain
      Type: A
      TTL: 900
      ResourceRecords:
        - !GetAtt DomainControllerA.PrivateIp
  DomainControllerACPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: The average CPU Utilization is greater than 90% over 3 consecutive minutes
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: AWS/EC2
      MetricName: CPUUtilization
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: 90
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref DomainControllerA
  DomainControllerAMemoryAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: The committed memory is greater than 50% over 3 consecutive minutes
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: !Sub ${SystemName}/${EnvironmentName}-${DirectoryUtilityName}
      MetricName: MemoryCommittedPercent
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: 50
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref DomainControllerA
        - Name: objectname
          Value: Memory
  DomainControllerADisk1Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: 'The disk C: percent free is less than than 10% over 3 consecutive minutes'
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: !Sub ${SystemName}/${EnvironmentName}-${DirectoryUtilityName}
      MetricName: DiskFreePercent
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: 10
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref DomainControllerA
        - Name: objectname
          Value: LogicalDisk
        - Name: instance
          Value: 'C:'
  DomainControllerADisk2Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: 'The disk D: percent free is less than than 10% over 3 consecutive minutes'
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: !Sub ${SystemName}/${EnvironmentName}-${DirectoryUtilityName}
      MetricName: DiskFreePercent
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: 10
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref DomainControllerA
        - Name: objectname
          Value: LogicalDisk
        - Name: instance
          Value: 'D:'
  # Dashboard:
  #   Type: AWS::CloudWatch::Dashboard
  #   Properties:
  #     DashboardName: !Sub
  #       - ${EnvironmentName}-${DirectoryUtilityName}-${RegionName}
  #       - RegionName: !FindInMap [ RegionNameMap, !Ref 'AWS::Region', Name ]
  #     DashboardBody: !Sub |
  #       {
  #         "widgets" : [ {
  #           "type" : "text",
  #           "x" : 0,
  #           "y" : 0,
  #           "width" : 24,
  #           "height" : 1,
  #           "properties" : {
  #             "markdown" : "# ${EnvironmentName}-${DirectoryUtilityName}"
  #           }
  #         },
  #         {
  #           "type" : "text",
  #           "x" : 0,
  #           "y" : 1,
  #           "width" : 24,
  #           "height" : 1,
  #           "properties" : {
  #             "markdown" : "## Domain Controller A"
  #           }
  #         },
  #         {
  #           "type" : "text",
  #           "x" : 0,
  #           "y" : 2,
  #           "width" : 24,
  #           "height" : 1,
  #           "properties" : {
  #             "markdown" : "### Graphs"
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 0,
  #           "y" : 3,
  #           "width" : 6,
  #           "height" : 9,
  #           "properties" : {
  #             "title" : "Instance: CPU",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "period" : 60,
  #             "region" : "${AWS::Region}",
  #             "metrics" : [
  #               [ "AWS/EC2", "CPUUtilization", "InstanceId", "${DomainControllerA}", { "label" : "CPU Utilization" } ],
  #               [ "AWS/EC2", "CPUSurplusCreditBalance", "InstanceId", "${DomainControllerA}", { "label" : "CPU Surplus Credit Balance", "yAxis" : "right" } ]
  #             ],
  #             "yAxis" : {
  #               "left" : { "min" : 0, "max" : 100 }
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 6,
  #           "y" : 3,
  #           "width" : 6,
  #           "height" : 9,
  #           "properties" : {
  #             "title" : "Instance: Memory",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "period" : 60,
  #             "region" : "${AWS::Region}",
  #             "metrics" : [
  #               [ "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}", "MemoryCommittedPercent", "InstanceId", "${DomainControllerA}", "objectname", "Memory", { "label" : "Memory Committed %" } ],
  #               [ "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}", "MemoryPageOps", "InstanceId", "${DomainControllerA}", "objectname", "Memory", { "label" : "Hard Page Faults / second", "yAxis" : "right" } ]
  #             ],
  #             "yAxis" : {
  #               "left" : { "min" : 0, "max" : 100 }
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 12,
  #           "y" : 3,
  #           "width" : 6,
  #           "height" : 9,
  #           "properties" : {
  #             "title" : "Instance: Disk",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "period" : 60,
  #             "region" : "${AWS::Region}",
  #             "metrics" : [
  #               [ { "expression" : "100-m1", "label" : "Disk Used % (C:)", "id" : "e1" } ],
  #               [ { "expression" : "100-m2", "label" : "Disk Used % (D:)", "id" : "e2" } ],
  #               [ "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}", "DiskFreePercent", "InstanceId", "${DomainControllerA}", "objectname", "LogicalDisk", "instance", "C:", { "label" : "Disk Free % (C:)", "id" : "m1", "visible" : false } ],
  #               [ "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}", "DiskFreePercent", "InstanceId", "${DomainControllerA}", "objectname", "LogicalDisk", "instance", "D:", { "label" : "Disk Free % (D:)", "id" : "m2", "visible" : false } ]
  #             ],
  #             "yAxis" : {
  #               "left" : { "min" : 0, "max" : 100 }
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 18,
  #           "y" : 3,
  #           "width" : 6,
  #           "height" : 9,
  #           "properties" : {
  #             "title" : "Instance: Network",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "period" : 60,
  #             "region" : "${AWS::Region}",
  #             "metrics" : [
  #               [ "AWS/EC2", "NetworkOut", "InstanceId", "${DomainControllerA}", { "label" : "Network Out" } ],
  #               [ "AWS/EC2", "NetworkIn", "InstanceId", "${DomainControllerA}", { "label" : "Network In" } ]
  #             ]
  #           }
  #         },
  #         {
  #           "type" : "text",
  #           "x" : 0,
  #           "y" : 12,
  #           "width" : 24,
  #           "height" : 1,
  #           "properties" : {
  #             "markdown" : "### Alarms"
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 0,
  #           "y" : 13,
  #           "width" : 3,
  #           "height" : 6,
  #           "properties" : {
  #             "title" : "CPU Alarm",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "annotations" : {
  #               "alarms" : [ "${DomainControllerACPUAlarm.Arn}" ]
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 3,
  #           "y" : 13,
  #           "width" : 3,
  #           "height" : 6,
  #           "properties" : {
  #             "title" : "Memory Alarm",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "annotations" : {
  #               "alarms" : [ "${DomainControllerAMemoryAlarm.Arn}" ]
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 6,
  #           "y" : 13,
  #           "width" : 3,
  #           "height" : 6,
  #           "properties" : {
  #             "title" : "Disk (C:) Alarm",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "annotations" : {
  #               "alarms" : [ "${DomainControllerADisk1Alarm.Arn}" ]
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 9,
  #           "y" : 13,
  #           "width" : 3,
  #           "height" : 6,
  #           "properties" : {
  #             "title" : "Disk (D:) Alarm",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "annotations" : {
  #               "alarms" : [ "${DomainControllerADisk2Alarm.Arn}" ]
  #             }
  #           }
  #         },
  #         {
  #           "type" : "text",
  #           "x" : 0,
  #           "y" : 19,
  #           "width" : 24,
  #           "height" : 1,
  #           "properties" : {
  #             "markdown" : "## Domain Controller B"
  #           }
  #         },
  #         {
  #           "type" : "text",
  #           "x" : 0,
  #           "y" : 20,
  #           "width" : 24,
  #           "height" : 1,
  #           "properties" : {
  #             "markdown" : "### Graphs"
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 0,
  #           "y" : 21,
  #           "width" : 6,
  #           "height" : 9,
  #           "properties" : {
  #             "title" : "Instance: CPU",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "period" : 60,
  #             "region" : "${AWS::Region}",
  #             "metrics" : [
  #               [ "AWS/EC2", "CPUUtilization", "InstanceId", "${DomainControllerB}", { "label" : "CPU Utilization" } ],
  #               [ "AWS/EC2", "CPUSurplusCreditBalance", "InstanceId", "${DomainControllerB}", { "label" : "CPU Surplus Credit Balance", "yAxis" : "right" } ]
  #             ],
  #             "yAxis" : {
  #               "left" : { "min" : 0, "max" : 100 }
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 6,
  #           "y" : 21,
  #           "width" : 6,
  #           "height" : 9,
  #           "properties" : {
  #             "title" : "Instance: Memory",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "period" : 60,
  #             "region" : "${AWS::Region}",
  #             "metrics" : [
  #               [ "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}", "MemoryCommittedPercent", "InstanceId", "${DomainControllerB}", "objectname", "Memory", { "label" : "Memory Committed %" } ],
  #               [ "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}", "MemoryPageOps", "InstanceId", "${DomainControllerB}", "objectname", "Memory", { "label" : "Hard Page Faults / second", "yAxis" : "right" } ]
  #             ],
  #             "yAxis" : {
  #               "left" : { "min" : 0, "max" : 100 }
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 12,
  #           "y" : 21,
  #           "width" : 6,
  #           "height" : 9,
  #           "properties" : {
  #             "title" : "Instance: Disk",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "period" : 60,
  #             "region" : "${AWS::Region}",
  #             "metrics" : [
  #               [ { "expression" : "100-m1", "label" : "Disk Used % (C:)", "id" : "e1" } ],
  #               [ { "expression" : "100-m2", "label" : "Disk Used % (D:)", "id" : "e2" } ],
  #               [ "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}", "DiskFreePercent", "InstanceId", "${DomainControllerB}", "objectname", "LogicalDisk", "instance", "C:", { "label" : "Disk Free % (C:)", "id" : "m1", "visible" : false } ],
  #               [ "${SystemName}/${EnvironmentName}-${DirectoryUtilityName}", "DiskFreePercent", "InstanceId", "${DomainControllerB}", "objectname", "LogicalDisk", "instance", "D:", { "label" : "Disk Free % (D:)", "id" : "m2", "visible" : false } ]
  #             ],
  #             "yAxis" : {
  #               "left" : { "min" : 0, "max" : 100 }
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 18,
  #           "y" : 21,
  #           "width" : 6,
  #           "height" : 9,
  #           "properties" : {
  #             "title" : "Instance: Network",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "period" : 60,
  #             "region" : "${AWS::Region}",
  #             "metrics" : [
  #               [ "AWS/EC2", "NetworkOut", "InstanceId", "${DomainControllerB}", { "label" : "Network Out" } ],
  #               [ "AWS/EC2", "NetworkIn", "InstanceId", "${DomainControllerB}", { "label" : "Network In" } ]
  #             ]
  #           }
  #         },
  #         {
  #           "type" : "text",
  #           "x" : 0,
  #           "y" : 30,
  #           "width" : 24,
  #           "height" : 1,
  #           "properties" : {
  #             "markdown" : "### Alarms"
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 0,
  #           "y" : 31,
  #           "width" : 3,
  #           "height" : 6,
  #           "properties" : {
  #             "title" : "CPU Alarm",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "annotations" : {
  #               "alarms" : [ "${DomainControllerBCPUAlarm.Arn}" ]
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 3,
  #           "y" : 31,
  #           "width" : 3,
  #           "height" : 6,
  #           "properties" : {
  #             "title" : "Memory Alarm",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "annotations" : {
  #               "alarms" : [ "${DomainControllerBMemoryAlarm.Arn}" ]
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 6,
  #           "y" : 31,
  #           "width" : 3,
  #           "height" : 6,
  #           "properties" : {
  #             "title" : "Disk (C:) Alarm",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "annotations" : {
  #               "alarms" : [ "${DomainControllerBDisk1Alarm.Arn}" ]
  #             }
  #           }
  #         },
  #         {
  #           "type" : "metric",
  #           "x" : 9,
  #           "y" : 31,
  #           "width" : 3,
  #           "height" : 6,
  #           "properties" : {
  #             "title" : "Disk (D:) Alarm",
  #             "view" : "timeSeries",
  #             "stacked" : false,
  #             "annotations" : {
  #               "alarms" : [ "${DomainControllerBDisk2Alarm.Arn}" ]
  #             }
  #           }
  #         } ]
  #       }
  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: !Ref ActiveDirectoryPDCDomainName
      DomainNameServers:
      - !Sub ${DomainControllerA.PrivateIp}
      # - !Sub ${DomainControllerA.PrivateIp}, ${DomainControllerB.PrivateIp}
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-DHCPOptions
    DependsOn: DomainControllerA
  VPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      DhcpOptionsId: !Ref DHCPOptions
Outputs:
  DomainMemberSecurityGroup:
    Description: The Domain Member SecurityGroup
    Value: !Ref DomainMemberSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-DomainMemberSecurityGroup
  AuthenticatorSecurityGroup:
    Description: The Authenticator SecurityGroup
    Value: !Ref AuthenticatorSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-AuthenticatorSecurityGroup
  AdministratorSecurityGroup:
    Description: The Administrator SecurityGroup
    Value: !Ref AdministratorSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-AdministratorSecurityGroup
  DomainControllerSecurityGroup:
    Description: The Domain Controller SecurityGroup
    Value: !Ref DomainControllerSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-DomainControllerSecurityGroup
  # AdministratorSecret:
  #   Description: The Administrator Secret Name
  #   Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-Administrator
  #   Export:
  #     Name: !Sub ${AWS::StackName}-AdministratorSecret
  SafeModeSecret:
    Description: The Safe Mode Administrator Secret Name
    Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-SafeMode
    Export:
      Name: !Sub ${AWS::StackName}-SafeModeSecret
  EncryptionSecret:
    Description: The Seed Data Encryption Secret Name
    Value: !Sub ${EnvironmentName}-${DirectoryUtilityName}-Encryption
    Export:
      Name: !Sub ${AWS::StackName}-EncryptionSecret
