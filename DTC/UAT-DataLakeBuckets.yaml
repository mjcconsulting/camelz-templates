AWSTemplateFormatVersion: 2010-09-09
Description: Common-DataLakeBuckets Template.
  This creates DataLakeBuckets S3 Buckets. These buckets hold artifacts created by Build Pipelines, for use by installation scripts when creating Instances.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment Configuration
        Parameters:
          - AccountAlias
          - EnvironmentName
      - Label:
          default: Topic Configuration
        Parameters:
          - TopicPrefix
      - Label:
          default: Bucket Configuration
        Parameters:
          - UseGlacier
    ParameterLabels:
      AccountAlias:
        default: Account Alias
      EnvironmentName:
        default: Environment Name
      UseGlacier:
        default: Use Glacier
      TopicPrefix:
        default: Topic Prefix
Parameters:
  AccountAlias:
    Description: Unique Alias of the Account (if defined). If specified, the Alias instead of the AccountID is appended to bucket names to insure uniqueness.
    Type: String
    MaxLength: 32
    Default: ''
    AllowedPattern: (^$|^[a-z][-a-z0-9]*$)
    ConstraintDescription: must begin with a lower case letter and contain lower case letters, numbers and dashes.
  EnvironmentName:
    Description: Name of the Environment associated with the Stack
    Type: String
    Default: Production
    AllowedValues:
      - Production
      - Staging
      - UAT
      - QA
      - Testing
      - Development
      - Build
      - Core
      - Recovery
      - Log
      - Identity
      - Management
      - Organization
    ConstraintDescription: must be Production, Staging, UAT, QA, Testing, Development, Build, Core, Recovery, Log, Identity, Management or Organization.
  TopicPrefix:
    Description: Optional Prefix for Topic Display Name
    Type: String
    Default: ''
    AllowedPattern: (^$|^[A-Z][A-Z0-9]{1,4}$)
    ConstraintDescription: must begin with an upper-case letter and consist of 1 to 4 additional upper-case letters or digits, if specified.
  UseGlacier:
    Description: Use Glacier for Archived Logs
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either true or false.
Conditions:
  AppendAccountId: !Equals [ !Ref AccountAlias, '' ]
  ConfigureGlacier: !Equals [ !Ref UseGlacier, true ]
  ConfigureTopicPrefix: !Not [ !Equals [ !Ref TopicPrefix, '' ]]
Resources:
  centralized2ClientsInputDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - centralized2-clients-input-data-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ReduceStorageCostsThenDeletePriorVersions
            Status: Enabled
            Prefix: ''
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            ExpirationInDays: 425
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            NoncurrentVersionExpirationInDays: 395
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     - Event: s3:ObjectCreated:*
      #       Topic: !Ref "SubmissionsTopic"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-centralized2ClientsInputDataBucket
    DeletionPolicy: Retain
  centralized2BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref centralized2ClientsInputDataBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFormationACLCheck
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${centralized2ClientsInputDataBucket}
          - Sid: AllowCloudFormationRead
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${centralized2ClientsInputDataBucket}/*
    DependsOn: centralized2ClientsInputDataBucket
  #   DependsOn:
  #     - centralized2ClientsInputDataTopicPolicy
  # centralized2ClientsInputDataTopic:
  #   Type: AWS::SNS::Topic
  #   Properties:
  #     TopicName: centralized2ClientsInputData
  #     DisplayName: !If
  #       - ConfigureTopicPrefix
  #       - !Sub ${TopicPrefix} centralized2ClientsInputData
  #       - centralized2ClientsInputData
  # centralized2ClientsInputDataTopicPolicy:
  #   Type: AWS::SNS::TopicPolicy
  #   Properties:
  #     PolicyDocument:
  #       Id: TopicPolicy
  #       Version: "2012-10-17"
  #       Statement:
  #         - Sid: StatementId
  #           Effect: Allow
  #           Principal:
  #             AWS: "*"
  #           Action: sns:Publish
  #           Resource: !Ref "centralized2ClientsInputDataTopic"
  #           Condition:
  #              ArnLike:
  #                AWS:SourceArn: !Sub
  #                 - arn:aws:s3:::${BucketName}
  #                 - BucketName: centralized2-clients-input-data-${Account}-${AWS::Region}
  #     Topics:
  #       - !Ref "centralized2ClientsInputDataTopic"
  DevelopersInputDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - developers-input-data-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ReduceStorageCostsThenDeletePriorVersions
            Status: Enabled
            Prefix: ''
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            ExpirationInDays: 425
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            NoncurrentVersionExpirationInDays: 395
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     - Event: s3:ObjectCreated:*
      #       Topic: !Ref "SubmissionsTopic"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-DevelopersInputDataBucket
    DeletionPolicy: Retain
  DevelopersBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DevelopersInputDataBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFormationACLCheck
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${DevelopersInputDataBucket}
          - Sid: AllowCloudFormationRead
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${DevelopersInputDataBucket}/*
    DependsOn: DevelopersInputDataBucket
  GlueClientsOutputDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - glue-clients-output-data-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ReduceStorageCostsThenDeletePriorVersions
            Status: Enabled
            Prefix: ''
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            ExpirationInDays: 425
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            NoncurrentVersionExpirationInDays: 395
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     - Event: s3:ObjectCreated:*
      #       Topic: !Ref "SubmissionsTopic"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-GlueClientsOutputDataBucket
    DeletionPolicy: Retain
  GlueBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref GlueClientsOutputDataBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFormationACLCheck
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${GlueClientsOutputDataBucket}
          - Sid: AllowCloudFormationRead
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${GlueClientsOutputDataBucket}/*
    DependsOn: GlueClientsOutputDataBucket
  DataBackupsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - databackups-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ReduceStorageCostsThenDeletePriorVersions
            Status: Enabled
            Prefix: ''
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            ExpirationInDays: 425
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            NoncurrentVersionExpirationInDays: 395
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     - Event: s3:ObjectCreated:*
      #       Topic: !Ref "SubmissionsTopic"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-DataBackupsBucket
    DeletionPolicy: Retain
  DataBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DataBackupsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFormationACLCheck
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${DataBackupsBucket}
          - Sid: AllowCloudFormationRead
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${DataBackupsBucket}/*
    DependsOn: DataBackupsBucket
  AthenaOutputsQueryBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - athena-output-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ReduceStorageCostsThenDeletePriorVersions
            Status: Enabled
            Prefix: ''
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            ExpirationInDays: 425
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            NoncurrentVersionExpirationInDays: 395
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     - Event: s3:ObjectCreated:*
      #       Topic: !Ref "SubmissionsTopic"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-AthenaOutputsQueryBucket
    DeletionPolicy: Retain
  AthenaBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AthenaOutputsQueryBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFormationACLCheck
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${AthenaOutputsQueryBucket}
          - Sid: AllowCloudFormationRead
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${AthenaOutputsQueryBucket}/*
    DependsOn: AthenaOutputsQueryBucket
  CICDArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - cicd-artifacts-input-data-${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ReduceStorageCostsThenDeletePriorVersions
            Status: Enabled
            Prefix: ''
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            ExpirationInDays: 425
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            NoncurrentVersionExpirationInDays: 395
      # NotificationConfiguration:
      #   TopicConfigurations:
      #     - Event: s3:ObjectCreated:*
      #       Topic: !Ref "SubmissionsTopic"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-CICDArtifactsBucket
    DeletionPolicy: Retain
  CICDBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CICDArtifactsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCloudFormationACLCheck
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !Sub arn:aws:s3:::${CICDArtifactsBucket}
          - Sid: AllowCloudFormationRead
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub arn:aws:s3:::${CICDArtifactsBucket}/*
          - Sid: AllowCrossAccountBucketObject
            Effect: Allow
            Principal:
              AWS: '581524105996'
            Action: 's3:*'
            Resource: !Sub arn:aws:s3:::${CICDArtifactsBucket}/*
    DependsOn: CICDArtifactsBucket
  DmsalndzBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - dmsalndz${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ReduceStorageCostsThenDeletePriorVersions
            Status: Enabled
            Prefix: ''
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            ExpirationInDays: 425
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            NoncurrentVersionExpirationInDays: 395
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-DmsalndzBucket
    DeletionPolicy: Retain
  DmsaodhrzBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
        - dmsaodhrz${Account}-${AWS::Region}
        - Account: !If [ AppendAccountId, !Ref 'AWS::AccountId', !Ref AccountAlias ]
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ReduceStorageCostsThenDeletePriorVersions
            Status: Enabled
            Prefix: ''
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            ExpirationInDays: 425
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
            NoncurrentVersionExpirationInDays: 395
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-DmsaodhrzBucket
    DeletionPolicy: Retain
Outputs:
  centralized2ClientsInputDataBucket:
    Description: The centralized2 Clients Input Data Bucket Name
    Value: !Ref centralized2ClientsInputDataBucket
    Export:
      Name: !Sub ${AWS::StackName}-centralized2ClientsInputDataBucket
  DevelopersInputDataBucket:
    Description: The Developers Input Data Bucket Name
    Value: !Ref DevelopersInputDataBucket
    Export:
      Name: !Sub ${AWS::StackName}-DevelopersInputDataBucket
  GlueClientsOutputDataBucket:
   Description: The Glue Clients Output Data Bucket Name
   Value: !Ref GlueClientsOutputDataBucket
   Export:
     Name: !Sub ${AWS::StackName}-GlueClientsOutputDataBucket
  DataBackupsBucket:
    Description: The Data Back ups Bucket Name
    Value: !Ref DataBackupsBucket
    Export:
      Name: !Sub ${AWS::StackName}-DataBackupsBucket
  AthenaOutputsQueryBucket:
    Description: The Athena Outputs Query Bucket Name
    Value: !Ref AthenaOutputsQueryBucket
    Export:
      Name: !Sub ${AWS::StackName}-AthenaOutputsQueryBucket
  CICDArtifactsBucket:
    Description: The CICD Artifacts Bucket Name
    Value: !Ref CICDArtifactsBucket
    Export:
      Name: !Sub ${AWS::StackName}-CICDArtifactsBucket
  DmsalndzBucket:
    Description: The Dmsalndz Bucket Name
    Value: !Ref DmsalndzBucket
    Export:
      Name: !Sub ${AWS::StackName}-DmsalndzBucket
  DmsaodhrzBucket:
    Description: The Dmsaodhrz Bucket Name
    Value: !Ref DmsaodhrzBucket
    Export:
      Name: !Sub ${AWS::StackName}-DmsaodhrzBucket
